HloModule jit_test_conv2d.1357

%body_computation.17 (parameter.18: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4]) {
  %constant.28 = pred[] constant(false)
  %parameter.18 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.19 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=0
  %constant.29 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.30 = s32[] add(s32[] %get-tuple-element.19, s32[] %constant.29), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.20 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=1
  %get-tuple-element.21 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=2
  %get-tuple-element.22 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=3
  %add.39 = u32[2]{0} add(u32[2]{0} %get-tuple-element.21, u32[2]{0} %get-tuple-element.22), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.26 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=7
  %slice.31 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.26), slice={[0:1]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(1,)\n                  start_indices=(0,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.32 = u32[] reshape(u32[1]{0} %slice.31), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.40 = u32[2]{0} broadcast(u32[] %reshape.32), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.41 = u32[2]{0} shift-left(u32[2]{0} %get-tuple-element.22, u32[2]{0} %broadcast.40), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.42 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.43 = u32[] subtract(u32[] %constant.42, u32[] %reshape.32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.44 = u32[2]{0} broadcast(u32[] %subtract.43), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.45 = u32[2]{0} shift-right-logical(u32[2]{0} %get-tuple-element.22, u32[2]{0} %broadcast.44), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.46 = u32[2]{0} or(u32[2]{0} %shift-left.41, u32[2]{0} %shift-right-logical.45), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.47 = u32[2]{0} xor(u32[2]{0} %add.39, u32[2]{0} %or.46), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.48 = u32[2]{0} add(u32[2]{0} %add.39, u32[2]{0} %xor.47), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.33 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.26), slice={[1:2]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(2,)\n                  start_indices=(1,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.34 = u32[] reshape(u32[1]{0} %slice.33), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.49 = u32[2]{0} broadcast(u32[] %reshape.34), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.50 = u32[2]{0} shift-left(u32[2]{0} %xor.47, u32[2]{0} %broadcast.49), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.51 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.52 = u32[] subtract(u32[] %constant.51, u32[] %reshape.34), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.53 = u32[2]{0} broadcast(u32[] %subtract.52), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.54 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.47, u32[2]{0} %broadcast.53), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.55 = u32[2]{0} or(u32[2]{0} %shift-left.50, u32[2]{0} %shift-right-logical.54), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.56 = u32[2]{0} xor(u32[2]{0} %add.48, u32[2]{0} %or.55), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.57 = u32[2]{0} add(u32[2]{0} %add.48, u32[2]{0} %xor.56), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.35 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.26), slice={[2:3]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(3,)\n                  start_indices=(2,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.36 = u32[] reshape(u32[1]{0} %slice.35), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.58 = u32[2]{0} broadcast(u32[] %reshape.36), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.59 = u32[2]{0} shift-left(u32[2]{0} %xor.56, u32[2]{0} %broadcast.58), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.60 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.61 = u32[] subtract(u32[] %constant.60, u32[] %reshape.36), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.62 = u32[2]{0} broadcast(u32[] %subtract.61), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.63 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.56, u32[2]{0} %broadcast.62), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.64 = u32[2]{0} or(u32[2]{0} %shift-left.59, u32[2]{0} %shift-right-logical.63), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.65 = u32[2]{0} xor(u32[2]{0} %add.57, u32[2]{0} %or.64), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.66 = u32[2]{0} add(u32[2]{0} %add.57, u32[2]{0} %xor.65), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.23 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=4
  %broadcast.75 = u32[2]{0} broadcast(u32[] %get-tuple-element.23), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.76 = u32[2]{0} add(u32[2]{0} %add.66, u32[2]{0} %broadcast.75), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.37 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.26), slice={[3:4]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(4,)\n                  start_indices=(3,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.38 = u32[] reshape(u32[1]{0} %slice.37), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.67 = u32[2]{0} broadcast(u32[] %reshape.38), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.68 = u32[2]{0} shift-left(u32[2]{0} %xor.65, u32[2]{0} %broadcast.67), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.69 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.70 = u32[] subtract(u32[] %constant.69, u32[] %reshape.38), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.71 = u32[2]{0} broadcast(u32[] %subtract.70), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.72 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.65, u32[2]{0} %broadcast.71), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.73 = u32[2]{0} or(u32[2]{0} %shift-left.68, u32[2]{0} %shift-right-logical.72), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.74 = u32[2]{0} xor(u32[2]{0} %add.66, u32[2]{0} %or.73), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.24 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=5
  %broadcast.77 = u32[2]{0} broadcast(u32[] %get-tuple-element.24), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.78 = u32[2]{0} add(u32[2]{0} %xor.74, u32[2]{0} %broadcast.77), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.79 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.80 = s32[] add(s32[] %get-tuple-element.19, s32[] %constant.79), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %convert.81 = u32[] convert(s32[] %add.80), metadata={op_type="convert_element_type" op_name="while/body/convert_element_type[ new_dtype=uint32\n                                 old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.82 = u32[2]{0} broadcast(u32[] %convert.81), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.83 = u32[2]{0} add(u32[2]{0} %add.78, u32[2]{0} %broadcast.82), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.25 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=6
  %get-tuple-element.27 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.18), index=8
  ROOT %tuple.84 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %add.30, s32[] %get-tuple-element.20, u32[2]{0} %add.76, u32[2]{0} %add.83, u32[] %get-tuple-element.24, u32[] %get-tuple-element.25, u32[] %get-tuple-element.23, u32[4]{0} %get-tuple-element.27, u32[4]{0} %get-tuple-element.26)
}

%cond_computation.85 (parameter.86: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> pred[] {
  %parameter.86 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.89 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=2
  %get-tuple-element.90 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=3
  %get-tuple-element.91 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=4
  %get-tuple-element.92 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=5
  %get-tuple-element.93 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=6
  %get-tuple-element.94 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=7
  %get-tuple-element.95 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=8
  %constant.96 = pred[] constant(false)
  %get-tuple-element.87 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=0
  %get-tuple-element.88 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.86), index=1
  ROOT %compare.97 = pred[] compare(s32[] %get-tuple-element.87, s32[] %get-tuple-element.88), direction=LT, type=UNSIGNED, metadata={op_type="lt" op_name="while/cond/lt" source_file="jax/jax_test_conv2d.py" source_line=33}
}

%jit_threefry_2x32.98 (parameter.99: u32[2], parameter.100: u32[4]) -> (u32[4]) {
  %constant.101 = pred[] constant(false)
  %constant.110 = pred[] constant(false), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.118 = s32[] constant(0), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.119 = s32[] constant(5), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %parameter.100 = u32[4]{0} parameter(1)
  %slice.106 = u32[2]{0} slice(u32[4]{0} %parameter.100), slice={[0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(0,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.99 = u32[2]{0} parameter(0)
  %slice.102 = u32[1]{0} slice(u32[2]{0} %parameter.99), slice={[0:1]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(1,)\n                                                       start_indices=(0,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.103 = u32[] reshape(u32[1]{0} %slice.102), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.114 = u32[2]{0} broadcast(u32[] %reshape.103), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.115 = u32[2]{0} add(u32[2]{0} %slice.106, u32[2]{0} %broadcast.114), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.107 = u32[2]{0} slice(u32[4]{0} %parameter.100), slice={[2:4]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(4,)\n                                                       start_indices=(2,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.104 = u32[1]{0} slice(u32[2]{0} %parameter.99), slice={[1:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(1,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.105 = u32[] reshape(u32[1]{0} %slice.104), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.116 = u32[2]{0} broadcast(u32[] %reshape.105), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.117 = u32[2]{0} add(u32[2]{0} %slice.107, u32[2]{0} %broadcast.116), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.111 = u32[] xor(u32[] %reshape.103, u32[] %reshape.105), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.112 = u32[] constant(466688986), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.113 = u32[] xor(u32[] %xor.111, u32[] %constant.112), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.108 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.109 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %tuple.120 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %constant.118, s32[] %constant.119, u32[2]{0} %add.115, u32[2]{0} %add.117, u32[] %reshape.105, u32[] %xor.113, u32[] %reshape.103, u32[4]{0} %constant.108, u32[4]{0} %constant.109), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %while.121 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) while((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.120), condition=%cond_computation.85, body=%body_computation.17, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.122 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.123 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.124 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.125 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.126 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.127 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.128 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.129 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.130 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.121), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.131 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %get-tuple-element.122, s32[] %get-tuple-element.123, u32[2]{0} %get-tuple-element.124, u32[2]{0} %get-tuple-element.125, u32[] %get-tuple-element.126, u32[] %get-tuple-element.127, u32[] %get-tuple-element.128, u32[4]{0} %get-tuple-element.129, u32[4]{0} %get-tuple-element.130), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.132 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.133 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.136 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.137 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.138 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.139 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.140 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.134 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.135 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.131), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.141 = (u32[2]{0}, u32[2]{0}) tuple(u32[2]{0} %get-tuple-element.134, u32[2]{0} %get-tuple-element.135)
  %get-tuple-element.142 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.141), index=0
  %get-tuple-element.143 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.141), index=1
  %concatenate.144 = u32[4]{0} concatenate(u32[2]{0} %get-tuple-element.142, u32[2]{0} %get-tuple-element.143), dimensions={0}, metadata={op_type="concatenate" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/concatenate[ dimension=0 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.145 = (u32[4]{0}) tuple(u32[4]{0} %concatenate.144)
}

%jit__split.146 (parameter.147: u32[4], parameter.148: u32[2]) -> (u32[2,2]) {
  %constant.149 = pred[] constant(false)
  %parameter.148 = u32[2]{0} parameter(1)
  %parameter.147 = u32[4]{0} parameter(0)
  %call.150 = (u32[4]{0}) call(u32[2]{0} %parameter.148, u32[4]{0} %parameter.147), to_apply=%jit_threefry_2x32.98, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.151 = u32[4]{0} get-tuple-element((u32[4]{0}) %call.150), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.152 = u32[2,2]{1,0} reshape(u32[4]{0} %get-tuple-element.151), metadata={op_type="reshape" op_name="jit(test_conv2d)/jit(_split)/reshape[ dimensions=None\n                                      new_sizes=(2, 2) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.153 = (u32[2,2]{1,0}) tuple(u32[2,2]{1,0} %reshape.152)
}

%body_computation__1.160 (parameter.161: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4]) {
  %constant.171 = pred[] constant(false)
  %parameter.161 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.162 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=0
  %constant.172 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.173 = s32[] add(s32[] %get-tuple-element.162, s32[] %constant.172), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.163 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=1
  %get-tuple-element.164 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=2
  %get-tuple-element.165 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=3
  %add.182 = u32[2]{0} add(u32[2]{0} %get-tuple-element.164, u32[2]{0} %get-tuple-element.165), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.169 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=7
  %slice.174 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.169), slice={[0:1]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(1,)\n                  start_indices=(0,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.175 = u32[] reshape(u32[1]{0} %slice.174), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.183 = u32[2]{0} broadcast(u32[] %reshape.175), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.184 = u32[2]{0} shift-left(u32[2]{0} %get-tuple-element.165, u32[2]{0} %broadcast.183), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.185 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.186 = u32[] subtract(u32[] %constant.185, u32[] %reshape.175), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.187 = u32[2]{0} broadcast(u32[] %subtract.186), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.188 = u32[2]{0} shift-right-logical(u32[2]{0} %get-tuple-element.165, u32[2]{0} %broadcast.187), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.189 = u32[2]{0} or(u32[2]{0} %shift-left.184, u32[2]{0} %shift-right-logical.188), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.190 = u32[2]{0} xor(u32[2]{0} %add.182, u32[2]{0} %or.189), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.191 = u32[2]{0} add(u32[2]{0} %add.182, u32[2]{0} %xor.190), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.176 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.169), slice={[1:2]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(2,)\n                  start_indices=(1,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.177 = u32[] reshape(u32[1]{0} %slice.176), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.192 = u32[2]{0} broadcast(u32[] %reshape.177), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.193 = u32[2]{0} shift-left(u32[2]{0} %xor.190, u32[2]{0} %broadcast.192), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.194 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.195 = u32[] subtract(u32[] %constant.194, u32[] %reshape.177), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.196 = u32[2]{0} broadcast(u32[] %subtract.195), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.197 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.190, u32[2]{0} %broadcast.196), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.198 = u32[2]{0} or(u32[2]{0} %shift-left.193, u32[2]{0} %shift-right-logical.197), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.199 = u32[2]{0} xor(u32[2]{0} %add.191, u32[2]{0} %or.198), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.200 = u32[2]{0} add(u32[2]{0} %add.191, u32[2]{0} %xor.199), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.178 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.169), slice={[2:3]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(3,)\n                  start_indices=(2,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.179 = u32[] reshape(u32[1]{0} %slice.178), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.201 = u32[2]{0} broadcast(u32[] %reshape.179), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.202 = u32[2]{0} shift-left(u32[2]{0} %xor.199, u32[2]{0} %broadcast.201), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.203 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.204 = u32[] subtract(u32[] %constant.203, u32[] %reshape.179), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.205 = u32[2]{0} broadcast(u32[] %subtract.204), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.206 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.199, u32[2]{0} %broadcast.205), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.207 = u32[2]{0} or(u32[2]{0} %shift-left.202, u32[2]{0} %shift-right-logical.206), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.208 = u32[2]{0} xor(u32[2]{0} %add.200, u32[2]{0} %or.207), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.209 = u32[2]{0} add(u32[2]{0} %add.200, u32[2]{0} %xor.208), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.166 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=4
  %broadcast.218 = u32[2]{0} broadcast(u32[] %get-tuple-element.166), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.219 = u32[2]{0} add(u32[2]{0} %add.209, u32[2]{0} %broadcast.218), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.180 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.169), slice={[3:4]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(4,)\n                  start_indices=(3,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.181 = u32[] reshape(u32[1]{0} %slice.180), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.210 = u32[2]{0} broadcast(u32[] %reshape.181), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.211 = u32[2]{0} shift-left(u32[2]{0} %xor.208, u32[2]{0} %broadcast.210), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.212 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.213 = u32[] subtract(u32[] %constant.212, u32[] %reshape.181), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.214 = u32[2]{0} broadcast(u32[] %subtract.213), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.215 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.208, u32[2]{0} %broadcast.214), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.216 = u32[2]{0} or(u32[2]{0} %shift-left.211, u32[2]{0} %shift-right-logical.215), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.217 = u32[2]{0} xor(u32[2]{0} %add.209, u32[2]{0} %or.216), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.167 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=5
  %broadcast.220 = u32[2]{0} broadcast(u32[] %get-tuple-element.167), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.221 = u32[2]{0} add(u32[2]{0} %xor.217, u32[2]{0} %broadcast.220), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.222 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.223 = s32[] add(s32[] %get-tuple-element.162, s32[] %constant.222), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %convert.224 = u32[] convert(s32[] %add.223), metadata={op_type="convert_element_type" op_name="while/body/convert_element_type[ new_dtype=uint32\n                                 old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.225 = u32[2]{0} broadcast(u32[] %convert.224), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.226 = u32[2]{0} add(u32[2]{0} %add.221, u32[2]{0} %broadcast.225), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.168 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=6
  %get-tuple-element.170 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.161), index=8
  ROOT %tuple.227 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %add.173, s32[] %get-tuple-element.163, u32[2]{0} %add.219, u32[2]{0} %add.226, u32[] %get-tuple-element.167, u32[] %get-tuple-element.168, u32[] %get-tuple-element.166, u32[4]{0} %get-tuple-element.170, u32[4]{0} %get-tuple-element.169)
}

%cond_computation__1.228 (parameter.229: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> pred[] {
  %parameter.229 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.232 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=2
  %get-tuple-element.233 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=3
  %get-tuple-element.234 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=4
  %get-tuple-element.235 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=5
  %get-tuple-element.236 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=6
  %get-tuple-element.237 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=7
  %get-tuple-element.238 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=8
  %constant.239 = pred[] constant(false)
  %get-tuple-element.230 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=0
  %get-tuple-element.231 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.229), index=1
  ROOT %compare.240 = pred[] compare(s32[] %get-tuple-element.230, s32[] %get-tuple-element.231), direction=LT, type=UNSIGNED, metadata={op_type="lt" op_name="while/cond/lt" source_file="jax/jax_test_conv2d.py" source_line=33}
}

%jit_threefry_2x32__1.241 (parameter.242: u32[2], parameter.243: u32[4]) -> (u32[4]) {
  %constant.244 = pred[] constant(false)
  %constant.253 = pred[] constant(false), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.261 = s32[] constant(0), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.262 = s32[] constant(5), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %parameter.243 = u32[4]{0} parameter(1)
  %slice.249 = u32[2]{0} slice(u32[4]{0} %parameter.243), slice={[0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(0,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.242 = u32[2]{0} parameter(0)
  %slice.245 = u32[1]{0} slice(u32[2]{0} %parameter.242), slice={[0:1]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(1,)\n                                                       start_indices=(0,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.246 = u32[] reshape(u32[1]{0} %slice.245), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.257 = u32[2]{0} broadcast(u32[] %reshape.246), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.258 = u32[2]{0} add(u32[2]{0} %slice.249, u32[2]{0} %broadcast.257), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.250 = u32[2]{0} slice(u32[4]{0} %parameter.243), slice={[2:4]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(4,)\n                                                       start_indices=(2,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.247 = u32[1]{0} slice(u32[2]{0} %parameter.242), slice={[1:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(1,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.248 = u32[] reshape(u32[1]{0} %slice.247), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.259 = u32[2]{0} broadcast(u32[] %reshape.248), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.260 = u32[2]{0} add(u32[2]{0} %slice.250, u32[2]{0} %broadcast.259), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.254 = u32[] xor(u32[] %reshape.246, u32[] %reshape.248), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.255 = u32[] constant(466688986), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.256 = u32[] xor(u32[] %xor.254, u32[] %constant.255), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.251 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.252 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %tuple.263 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %constant.261, s32[] %constant.262, u32[2]{0} %add.258, u32[2]{0} %add.260, u32[] %reshape.248, u32[] %xor.256, u32[] %reshape.246, u32[4]{0} %constant.251, u32[4]{0} %constant.252), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %while.264 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) while((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.263), condition=%cond_computation__1.228, body=%body_computation__1.160, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.265 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.266 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.267 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.268 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.269 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.270 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.271 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.272 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.273 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.264), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.274 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %get-tuple-element.265, s32[] %get-tuple-element.266, u32[2]{0} %get-tuple-element.267, u32[2]{0} %get-tuple-element.268, u32[] %get-tuple-element.269, u32[] %get-tuple-element.270, u32[] %get-tuple-element.271, u32[4]{0} %get-tuple-element.272, u32[4]{0} %get-tuple-element.273), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.275 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.276 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.279 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.280 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.281 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.282 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.283 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.277 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.278 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.274), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.284 = (u32[2]{0}, u32[2]{0}) tuple(u32[2]{0} %get-tuple-element.277, u32[2]{0} %get-tuple-element.278)
  %get-tuple-element.285 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.284), index=0
  %get-tuple-element.286 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.284), index=1
  %concatenate.287 = u32[4]{0} concatenate(u32[2]{0} %get-tuple-element.285, u32[2]{0} %get-tuple-element.286), dimensions={0}, metadata={op_type="concatenate" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/concatenate[ dimension=0 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.288 = (u32[4]{0}) tuple(u32[4]{0} %concatenate.287)
}

%jit__split__1.289 (parameter.290: u32[4], parameter.291: u32[2]) -> (u32[2,2]) {
  %constant.292 = pred[] constant(false)
  %parameter.291 = u32[2]{0} parameter(1)
  %parameter.290 = u32[4]{0} parameter(0)
  %call.293 = (u32[4]{0}) call(u32[2]{0} %parameter.291, u32[4]{0} %parameter.290), to_apply=%jit_threefry_2x32__1.241, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.294 = u32[4]{0} get-tuple-element((u32[4]{0}) %call.293), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.295 = u32[2,2]{1,0} reshape(u32[4]{0} %get-tuple-element.294), metadata={op_type="reshape" op_name="jit(test_conv2d)/jit(_split)/reshape[ dimensions=None\n                                      new_sizes=(2, 2) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.296 = (u32[2,2]{1,0}) tuple(u32[2,2]{1,0} %reshape.295)
}

%body_computation__2.309 (parameter.310: (s32[], s32[], u32[2304], u32[2304], u32[], u32[], u32[], u32[4], u32[4])) -> (s32[], s32[], u32[2304], u32[2304], u32[], u32[], u32[], u32[4], u32[4]) {
  %constant.320 = pred[] constant(false)
  %parameter.310 = (s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.311 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=0
  %constant.321 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.322 = s32[] add(s32[] %get-tuple-element.311, s32[] %constant.321), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.312 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=1
  %get-tuple-element.313 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=2
  %get-tuple-element.314 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=3
  %add.331 = u32[2304]{0} add(u32[2304]{0} %get-tuple-element.313, u32[2304]{0} %get-tuple-element.314), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.318 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=7
  %slice.323 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.318), slice={[0:1]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(1,)\n                  start_indices=(0,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.324 = u32[] reshape(u32[1]{0} %slice.323), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.332 = u32[2304]{0} broadcast(u32[] %reshape.324), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.333 = u32[2304]{0} shift-left(u32[2304]{0} %get-tuple-element.314, u32[2304]{0} %broadcast.332), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.334 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.335 = u32[] subtract(u32[] %constant.334, u32[] %reshape.324), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.336 = u32[2304]{0} broadcast(u32[] %subtract.335), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.337 = u32[2304]{0} shift-right-logical(u32[2304]{0} %get-tuple-element.314, u32[2304]{0} %broadcast.336), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.338 = u32[2304]{0} or(u32[2304]{0} %shift-left.333, u32[2304]{0} %shift-right-logical.337), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.339 = u32[2304]{0} xor(u32[2304]{0} %add.331, u32[2304]{0} %or.338), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.340 = u32[2304]{0} add(u32[2304]{0} %add.331, u32[2304]{0} %xor.339), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.325 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.318), slice={[1:2]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(2,)\n                  start_indices=(1,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.326 = u32[] reshape(u32[1]{0} %slice.325), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.341 = u32[2304]{0} broadcast(u32[] %reshape.326), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.342 = u32[2304]{0} shift-left(u32[2304]{0} %xor.339, u32[2304]{0} %broadcast.341), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.343 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.344 = u32[] subtract(u32[] %constant.343, u32[] %reshape.326), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.345 = u32[2304]{0} broadcast(u32[] %subtract.344), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.346 = u32[2304]{0} shift-right-logical(u32[2304]{0} %xor.339, u32[2304]{0} %broadcast.345), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.347 = u32[2304]{0} or(u32[2304]{0} %shift-left.342, u32[2304]{0} %shift-right-logical.346), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.348 = u32[2304]{0} xor(u32[2304]{0} %add.340, u32[2304]{0} %or.347), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.349 = u32[2304]{0} add(u32[2304]{0} %add.340, u32[2304]{0} %xor.348), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.327 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.318), slice={[2:3]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(3,)\n                  start_indices=(2,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.328 = u32[] reshape(u32[1]{0} %slice.327), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.350 = u32[2304]{0} broadcast(u32[] %reshape.328), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.351 = u32[2304]{0} shift-left(u32[2304]{0} %xor.348, u32[2304]{0} %broadcast.350), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.352 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.353 = u32[] subtract(u32[] %constant.352, u32[] %reshape.328), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.354 = u32[2304]{0} broadcast(u32[] %subtract.353), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.355 = u32[2304]{0} shift-right-logical(u32[2304]{0} %xor.348, u32[2304]{0} %broadcast.354), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.356 = u32[2304]{0} or(u32[2304]{0} %shift-left.351, u32[2304]{0} %shift-right-logical.355), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.357 = u32[2304]{0} xor(u32[2304]{0} %add.349, u32[2304]{0} %or.356), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.358 = u32[2304]{0} add(u32[2304]{0} %add.349, u32[2304]{0} %xor.357), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.315 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=4
  %broadcast.367 = u32[2304]{0} broadcast(u32[] %get-tuple-element.315), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.368 = u32[2304]{0} add(u32[2304]{0} %add.358, u32[2304]{0} %broadcast.367), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.329 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.318), slice={[3:4]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(4,)\n                  start_indices=(3,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.330 = u32[] reshape(u32[1]{0} %slice.329), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.359 = u32[2304]{0} broadcast(u32[] %reshape.330), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.360 = u32[2304]{0} shift-left(u32[2304]{0} %xor.357, u32[2304]{0} %broadcast.359), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.361 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.362 = u32[] subtract(u32[] %constant.361, u32[] %reshape.330), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.363 = u32[2304]{0} broadcast(u32[] %subtract.362), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.364 = u32[2304]{0} shift-right-logical(u32[2304]{0} %xor.357, u32[2304]{0} %broadcast.363), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.365 = u32[2304]{0} or(u32[2304]{0} %shift-left.360, u32[2304]{0} %shift-right-logical.364), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.366 = u32[2304]{0} xor(u32[2304]{0} %add.358, u32[2304]{0} %or.365), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.316 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=5
  %broadcast.369 = u32[2304]{0} broadcast(u32[] %get-tuple-element.316), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.370 = u32[2304]{0} add(u32[2304]{0} %xor.366, u32[2304]{0} %broadcast.369), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.371 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.372 = s32[] add(s32[] %get-tuple-element.311, s32[] %constant.371), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %convert.373 = u32[] convert(s32[] %add.372), metadata={op_type="convert_element_type" op_name="while/body/convert_element_type[ new_dtype=uint32\n                                 old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.374 = u32[2304]{0} broadcast(u32[] %convert.373), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.375 = u32[2304]{0} add(u32[2304]{0} %add.370, u32[2304]{0} %broadcast.374), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.317 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=6
  %get-tuple-element.319 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.310), index=8
  ROOT %tuple.376 = (s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %add.322, s32[] %get-tuple-element.312, u32[2304]{0} %add.368, u32[2304]{0} %add.375, u32[] %get-tuple-element.316, u32[] %get-tuple-element.317, u32[] %get-tuple-element.315, u32[4]{0} %get-tuple-element.319, u32[4]{0} %get-tuple-element.318)
}

%cond_computation__2.377 (parameter.378: (s32[], s32[], u32[2304], u32[2304], u32[], u32[], u32[], u32[4], u32[4])) -> pred[] {
  %parameter.378 = (s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.381 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=2
  %get-tuple-element.382 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=3
  %get-tuple-element.383 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=4
  %get-tuple-element.384 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=5
  %get-tuple-element.385 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=6
  %get-tuple-element.386 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=7
  %get-tuple-element.387 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=8
  %constant.388 = pred[] constant(false)
  %get-tuple-element.379 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=0
  %get-tuple-element.380 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.378), index=1
  ROOT %compare.389 = pred[] compare(s32[] %get-tuple-element.379, s32[] %get-tuple-element.380), direction=LT, type=UNSIGNED, metadata={op_type="lt" op_name="while/cond/lt" source_file="jax/jax_test_conv2d.py" source_line=33}
}

%jit_threefry_2x32__2.390 (parameter.391: u32[2], parameter.392: u32[4608]) -> (u32[4608]) {
  %constant.393 = pred[] constant(false)
  %constant.402 = pred[] constant(false), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.410 = s32[] constant(0), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.411 = s32[] constant(5), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %parameter.392 = u32[4608]{0} parameter(1)
  %slice.398 = u32[2304]{0} slice(u32[4608]{0} %parameter.392), slice={[0:2304]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(2304,)\n                                                                                start_indices=(0,)\n                                                                                strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.391 = u32[2]{0} parameter(0)
  %slice.394 = u32[1]{0} slice(u32[2]{0} %parameter.391), slice={[0:1]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(1,)\n                                                                                start_indices=(0,)\n                                                                                strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.395 = u32[] reshape(u32[1]{0} %slice.394), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.406 = u32[2304]{0} broadcast(u32[] %reshape.395), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.407 = u32[2304]{0} add(u32[2304]{0} %slice.398, u32[2304]{0} %broadcast.406), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.399 = u32[2304]{0} slice(u32[4608]{0} %parameter.392), slice={[2304:4608]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(4608,)\n                                                                                start_indices=(2304,)\n                                                                                strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.396 = u32[1]{0} slice(u32[2]{0} %parameter.391), slice={[1:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                                                start_indices=(1,)\n                                                                                strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.397 = u32[] reshape(u32[1]{0} %slice.396), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.408 = u32[2304]{0} broadcast(u32[] %reshape.397), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.409 = u32[2304]{0} add(u32[2304]{0} %slice.399, u32[2304]{0} %broadcast.408), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.403 = u32[] xor(u32[] %reshape.395, u32[] %reshape.397), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.404 = u32[] constant(466688986), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.405 = u32[] xor(u32[] %xor.403, u32[] %constant.404), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.400 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.401 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %tuple.412 = (s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %constant.410, s32[] %constant.411, u32[2304]{0} %add.407, u32[2304]{0} %add.409, u32[] %reshape.397, u32[] %xor.405, u32[] %reshape.395, u32[4]{0} %constant.400, u32[4]{0} %constant.401), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %while.413 = (s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) while((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.412), condition=%cond_computation__2.377, body=%body_computation__2.309, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.414 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.415 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.416 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.417 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.418 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.419 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.420 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.421 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.422 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.413), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.423 = (s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %get-tuple-element.414, s32[] %get-tuple-element.415, u32[2304]{0} %get-tuple-element.416, u32[2304]{0} %get-tuple-element.417, u32[] %get-tuple-element.418, u32[] %get-tuple-element.419, u32[] %get-tuple-element.420, u32[4]{0} %get-tuple-element.421, u32[4]{0} %get-tuple-element.422), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.424 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.425 = s32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.428 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.429 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.430 = u32[] get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.431 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.432 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.426 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.427 = u32[2304]{0} get-tuple-element((s32[], s32[], u32[2304]{0}, u32[2304]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.423), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.433 = (u32[2304]{0}, u32[2304]{0}) tuple(u32[2304]{0} %get-tuple-element.426, u32[2304]{0} %get-tuple-element.427)
  %get-tuple-element.434 = u32[2304]{0} get-tuple-element((u32[2304]{0}, u32[2304]{0}) %tuple.433), index=0
  %get-tuple-element.435 = u32[2304]{0} get-tuple-element((u32[2304]{0}, u32[2304]{0}) %tuple.433), index=1
  %concatenate.436 = u32[4608]{0} concatenate(u32[2304]{0} %get-tuple-element.434, u32[2304]{0} %get-tuple-element.435), dimensions={0}, metadata={op_type="concatenate" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/jit(threefry_2x32)/concatenate[ dimension=0 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.437 = (u32[4608]{0}) tuple(u32[4608]{0} %concatenate.436)
}

%jit__uniform.438 (parameter.439: u32[4608], parameter.440: u32[2], parameter.441: f32[], parameter.442: f32[]) -> (f32[3,3,16,32]) {
  %constant.443 = pred[] constant(false)
  %parameter.441 = f32[] parameter(2)
  %broadcast.444 = f32[1,1,1,1]{3,2,1,0} broadcast(f32[] %parameter.441), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                                                        shape=(1, 1, 1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.466 = f32[] reshape(f32[1,1,1,1]{3,2,1,0} %broadcast.444), metadata={op_type="max" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/max" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.467 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %reshape.466), dimensions={}, metadata={op_type="max" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/max" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.440 = u32[2]{0} parameter(1)
  %parameter.439 = u32[4608]{0} parameter(0)
  %call.446 = (u32[4608]{0}) call(u32[2]{0} %parameter.440, u32[4608]{0} %parameter.439), to_apply=%jit_threefry_2x32__2.390, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/xla_call[ backend=None\n                                                                device=None\n                                                                donated_invars=(False, False)\n                                                                name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.447 = u32[4608]{0} get-tuple-element((u32[4608]{0}) %call.446), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/xla_call[ backend=None\n                                                                device=None\n                                                                donated_invars=(False, False)\n                                                                name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.448 = u32[3,3,16,32]{3,2,1,0} reshape(u32[4608]{0} %get-tuple-element.447), metadata={op_type="reshape" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/reshape[ dimensions=None\n                                                               new_sizes=(3, 3, 16, 32) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.449 = u32[] constant(9), metadata={op_type="shift_right_logical" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.450 = u32[3,3,16,32]{3,2,1,0} broadcast(u32[] %constant.449), dimensions={}, metadata={op_type="shift_right_logical" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=24}
  %shift-right-logical.451 = u32[3,3,16,32]{3,2,1,0} shift-right-logical(u32[3,3,16,32]{3,2,1,0} %reshape.448, u32[3,3,16,32]{3,2,1,0} %broadcast.450), metadata={op_type="shift_right_logical" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.452 = u32[] constant(1065353216), metadata={op_type="or" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/or" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.453 = u32[3,3,16,32]{3,2,1,0} broadcast(u32[] %constant.452), dimensions={}, metadata={op_type="or" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/or" source_file="jax/jax_test_conv2d.py" source_line=24}
  %or.454 = u32[3,3,16,32]{3,2,1,0} or(u32[3,3,16,32]{3,2,1,0} %shift-right-logical.451, u32[3,3,16,32]{3,2,1,0} %broadcast.453), metadata={op_type="or" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/or" source_file="jax/jax_test_conv2d.py" source_line=24}
  %bitcast-convert.455 = f32[3,3,16,32]{3,2,1,0} bitcast-convert(u32[3,3,16,32]{3,2,1,0} %or.454), metadata={op_type="bitcast_convert_type" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/bitcast_convert_type[ new_dtype=float32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.456 = f32[] constant(1), metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.457 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.456), dimensions={}, metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.458 = f32[3,3,16,32]{3,2,1,0} subtract(f32[3,3,16,32]{3,2,1,0} %bitcast-convert.455, f32[3,3,16,32]{3,2,1,0} %broadcast.457), metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.442 = f32[] parameter(3)
  %broadcast.445 = f32[1,1,1,1]{3,2,1,0} broadcast(f32[] %parameter.442), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                                                        shape=(1, 1, 1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.459 = f32[1,1,1,1]{3,2,1,0} subtract(f32[1,1,1,1]{3,2,1,0} %broadcast.445, f32[1,1,1,1]{3,2,1,0} %broadcast.444), metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.460 = f32[] reshape(f32[1,1,1,1]{3,2,1,0} %subtract.459), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.461 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %reshape.460), dimensions={}, metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.462 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %subtract.458, f32[3,3,16,32]{3,2,1,0} %broadcast.461), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.463 = f32[] reshape(f32[1,1,1,1]{3,2,1,0} %broadcast.444), metadata={op_type="add" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.464 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %reshape.463), dimensions={}, metadata={op_type="add" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.465 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %multiply.462, f32[3,3,16,32]{3,2,1,0} %broadcast.464), metadata={op_type="add" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %maximum.468 = f32[3,3,16,32]{3,2,1,0} maximum(f32[3,3,16,32]{3,2,1,0} %broadcast.467, f32[3,3,16,32]{3,2,1,0} %add.465), metadata={op_type="max" op_name="jit(test_conv2d)/jit(_truncated_normal)/jit(_uniform)/max" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.469 = (f32[3,3,16,32]{3,2,1,0}) tuple(f32[3,3,16,32]{3,2,1,0} %maximum.468)
}

%jit__truncated_normal.470 (parameter.471: u32[4608], parameter.472: u32[2], parameter.473: s32[], parameter.474: s32[]) -> (f32[3,3,16,32]) {
  %constant.475 = pred[] constant(false)
  %parameter.473 = s32[] parameter(2)
  %convert.476 = f32[] convert(s32[] %parameter.473), metadata={op_type="convert_element_type" op_name="jit(test_conv2d)/jit(_truncated_normal)/convert_element_type[ new_dtype=float32\n                                                              old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.477 = f32[] constant(1.41421354), metadata={op_type="div" op_name="jit(test_conv2d)/jit(_truncated_normal)/div" source_file="jax/jax_test_conv2d.py" source_line=24}
  %divide.478 = f32[] divide(f32[] %convert.476, f32[] %constant.477), metadata={op_type="div" op_name="jit(test_conv2d)/jit(_truncated_normal)/div" source_file="jax/jax_test_conv2d.py" source_line=24}
  %abs.479 = f32[] abs(f32[] %divide.478), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.480 = f32[] constant(1), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.481 = pred[] compare(f32[] %abs.479, f32[] %constant.480), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.483 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.482 = f32[] multiply(f32[] %divide.478, f32[] %divide.478), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.484 = f32[] multiply(f32[] %constant.483, f32[] %multiply.482), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.485 = f32[] constant(7.85386146e-05), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.486 = f32[] add(f32[] %multiply.484, f32[] %constant.485), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.487 = f32[] multiply(f32[] %add.486, f32[] %multiply.482), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.488 = f32[] constant(-0.000801019371), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.489 = f32[] add(f32[] %multiply.487, f32[] %constant.488), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.490 = f32[] multiply(f32[] %add.489, f32[] %multiply.482), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.491 = f32[] constant(0.00518832775), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.492 = f32[] add(f32[] %multiply.490, f32[] %constant.491), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.493 = f32[] multiply(f32[] %add.492, f32[] %multiply.482), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.494 = f32[] constant(-0.0268538129), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.495 = f32[] add(f32[] %multiply.493, f32[] %constant.494), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.496 = f32[] multiply(f32[] %add.495, f32[] %multiply.482), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.497 = f32[] constant(0.112835854), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.498 = f32[] add(f32[] %multiply.496, f32[] %constant.497), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.499 = f32[] multiply(f32[] %add.498, f32[] %multiply.482), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.500 = f32[] constant(-0.37612626), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.501 = f32[] add(f32[] %multiply.499, f32[] %constant.500), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.502 = f32[] multiply(f32[] %add.501, f32[] %multiply.482), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.503 = f32[] constant(1.12837911), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.504 = f32[] add(f32[] %multiply.502, f32[] %constant.503), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.505 = f32[] multiply(f32[] %divide.478, f32[] %add.504), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.506 = f32[] constant(1), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.576 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.577 = pred[] compare(f32[] %divide.478, f32[] %constant.576), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.578 = f32[] constant(2), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %negate.508 = f32[] negate(f32[] %divide.478), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.509 = f32[] multiply(f32[] %negate.508, f32[] %divide.478), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %exponential.510 = f32[] exponential(f32[] %multiply.509), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.572 = f32[] constant(-88.7228394), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.573 = pred[] compare(f32[] %exponential.510, f32[] %constant.572), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.574 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.511 = f32[] constant(1), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %abs.507 = f32[] abs(f32[] %divide.478), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %divide.512 = f32[] divide(f32[] %constant.511, f32[] %abs.507), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.570 = f32[] multiply(f32[] %exponential.510, f32[] %divide.512), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.514 = f32[] constant(2), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.515 = pred[] compare(f32[] %abs.507, f32[] %constant.514), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.516 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.513 = f32[] multiply(f32[] %divide.512, f32[] %divide.512), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.517 = f32[] multiply(f32[] %constant.516, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.518 = f32[] constant(0.0232682), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.519 = f32[] add(f32[] %multiply.517, f32[] %constant.518), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.520 = f32[] multiply(f32[] %add.519, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.521 = f32[] constant(-0.138703942), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.522 = f32[] add(f32[] %multiply.520, f32[] %constant.521), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.523 = f32[] multiply(f32[] %add.522, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.524 = f32[] constant(0.368742466), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.525 = f32[] add(f32[] %multiply.523, f32[] %constant.524), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.526 = f32[] multiply(f32[] %add.525, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.527 = f32[] constant(-0.582473278), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.528 = f32[] add(f32[] %multiply.526, f32[] %constant.527), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.529 = f32[] multiply(f32[] %add.528, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.530 = f32[] constant(0.621000469), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.531 = f32[] add(f32[] %multiply.529, f32[] %constant.530), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.532 = f32[] multiply(f32[] %add.531, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.533 = f32[] constant(-0.494451523), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.534 = f32[] add(f32[] %multiply.532, f32[] %constant.533), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.535 = f32[] multiply(f32[] %add.534, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.536 = f32[] constant(0.340488), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.537 = f32[] add(f32[] %multiply.535, f32[] %constant.536), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.538 = f32[] multiply(f32[] %add.537, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.539 = f32[] constant(-0.274112701), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.540 = f32[] add(f32[] %multiply.538, f32[] %constant.539), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.541 = f32[] multiply(f32[] %add.540, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.542 = f32[] constant(0.563825965), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.543 = f32[] add(f32[] %multiply.541, f32[] %constant.542), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.544 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.545 = f32[] multiply(f32[] %constant.544, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.546 = f32[] constant(-10.477664), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.547 = f32[] add(f32[] %multiply.545, f32[] %constant.546), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.548 = f32[] multiply(f32[] %add.547, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.549 = f32[] constant(12.9772), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.550 = f32[] add(f32[] %multiply.548, f32[] %constant.549), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.551 = f32[] multiply(f32[] %add.550, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.552 = f32[] constant(-7.49551868), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.553 = f32[] add(f32[] %multiply.551, f32[] %constant.552), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.554 = f32[] multiply(f32[] %add.553, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.555 = f32[] constant(2.92101908), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.556 = f32[] add(f32[] %multiply.554, f32[] %constant.555), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.557 = f32[] multiply(f32[] %add.556, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.558 = f32[] constant(-1.01526523), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.559 = f32[] add(f32[] %multiply.557, f32[] %constant.558), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.560 = f32[] multiply(f32[] %add.559, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.561 = f32[] constant(0.42184633), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.562 = f32[] add(f32[] %multiply.560, f32[] %constant.561), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.563 = f32[] multiply(f32[] %add.562, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.564 = f32[] constant(-0.282076746), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.565 = f32[] add(f32[] %multiply.563, f32[] %constant.564), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.566 = f32[] multiply(f32[] %add.565, f32[] %multiply.513), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.567 = f32[] constant(0.564189494), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.568 = f32[] add(f32[] %multiply.566, f32[] %constant.567), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.569 = f32[] select(pred[] %compare.515, f32[] %add.543, f32[] %add.568), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.571 = f32[] multiply(f32[] %multiply.570, f32[] %select.569), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.575 = f32[] select(pred[] %compare.573, f32[] %constant.574, f32[] %multiply.571), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.579 = f32[] subtract(f32[] %constant.578, f32[] %select.575), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.580 = f32[] select(pred[] %compare.577, f32[] %subtract.579, f32[] %select.575), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.581 = f32[] subtract(f32[] %constant.506, f32[] %select.580), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.582 = f32[] select(pred[] %compare.481, f32[] %multiply.505, f32[] %subtract.581), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.697 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %select.582), dimensions={}, metadata={op_type="add" op_name="jit(test_conv2d)/jit(_truncated_normal)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.471 = u32[4608]{0} parameter(0)
  %parameter.472 = u32[2]{0} parameter(1)
  %constant.690 = f32[] constant(1.17549435e-38), metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_truncated_normal)/xla_call[ backend=None\n                                                  device=None\n                                                  donated_invars=(False, False, False, False)\n                                                  name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.691 = f32[] constant(1), metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_truncated_normal)/xla_call[ backend=None\n                                                  device=None\n                                                  donated_invars=(False, False, False, False)\n                                                  name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %call.692 = (f32[3,3,16,32]{3,2,1,0}) call(u32[4608]{0} %parameter.471, u32[2]{0} %parameter.472, f32[] %constant.690, f32[] %constant.691), to_apply=%jit__uniform.438, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_truncated_normal)/xla_call[ backend=None\n                                                  device=None\n                                                  donated_invars=(False, False, False, False)\n                                                  name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.693 = f32[3,3,16,32]{3,2,1,0} get-tuple-element((f32[3,3,16,32]{3,2,1,0}) %call.692), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_truncated_normal)/xla_call[ backend=None\n                                                  device=None\n                                                  donated_invars=(False, False, False, False)\n                                                  name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.474 = s32[] parameter(3)
  %convert.583 = f32[] convert(s32[] %parameter.474), metadata={op_type="convert_element_type" op_name="jit(test_conv2d)/jit(_truncated_normal)/convert_element_type[ new_dtype=float32\n                                                              old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.584 = f32[] constant(1.41421354), metadata={op_type="div" op_name="jit(test_conv2d)/jit(_truncated_normal)/div" source_file="jax/jax_test_conv2d.py" source_line=24}
  %divide.585 = f32[] divide(f32[] %convert.583, f32[] %constant.584), metadata={op_type="div" op_name="jit(test_conv2d)/jit(_truncated_normal)/div" source_file="jax/jax_test_conv2d.py" source_line=24}
  %abs.586 = f32[] abs(f32[] %divide.585), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.587 = f32[] constant(1), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.588 = pred[] compare(f32[] %abs.586, f32[] %constant.587), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.590 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.589 = f32[] multiply(f32[] %divide.585, f32[] %divide.585), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.591 = f32[] multiply(f32[] %constant.590, f32[] %multiply.589), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.592 = f32[] constant(7.85386146e-05), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.593 = f32[] add(f32[] %multiply.591, f32[] %constant.592), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.594 = f32[] multiply(f32[] %add.593, f32[] %multiply.589), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.595 = f32[] constant(-0.000801019371), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.596 = f32[] add(f32[] %multiply.594, f32[] %constant.595), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.597 = f32[] multiply(f32[] %add.596, f32[] %multiply.589), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.598 = f32[] constant(0.00518832775), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.599 = f32[] add(f32[] %multiply.597, f32[] %constant.598), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.600 = f32[] multiply(f32[] %add.599, f32[] %multiply.589), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.601 = f32[] constant(-0.0268538129), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.602 = f32[] add(f32[] %multiply.600, f32[] %constant.601), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.603 = f32[] multiply(f32[] %add.602, f32[] %multiply.589), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.604 = f32[] constant(0.112835854), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.605 = f32[] add(f32[] %multiply.603, f32[] %constant.604), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.606 = f32[] multiply(f32[] %add.605, f32[] %multiply.589), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.607 = f32[] constant(-0.37612626), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.608 = f32[] add(f32[] %multiply.606, f32[] %constant.607), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.609 = f32[] multiply(f32[] %add.608, f32[] %multiply.589), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.610 = f32[] constant(1.12837911), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.611 = f32[] add(f32[] %multiply.609, f32[] %constant.610), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.612 = f32[] multiply(f32[] %divide.585, f32[] %add.611), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.613 = f32[] constant(1), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.683 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.684 = pred[] compare(f32[] %divide.585, f32[] %constant.683), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.685 = f32[] constant(2), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %negate.615 = f32[] negate(f32[] %divide.585), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.616 = f32[] multiply(f32[] %negate.615, f32[] %divide.585), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %exponential.617 = f32[] exponential(f32[] %multiply.616), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.679 = f32[] constant(-88.7228394), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.680 = pred[] compare(f32[] %exponential.617, f32[] %constant.679), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.681 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.618 = f32[] constant(1), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %abs.614 = f32[] abs(f32[] %divide.585), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %divide.619 = f32[] divide(f32[] %constant.618, f32[] %abs.614), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.677 = f32[] multiply(f32[] %exponential.617, f32[] %divide.619), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.621 = f32[] constant(2), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.622 = pred[] compare(f32[] %abs.614, f32[] %constant.621), direction=LT, type=UNSIGNED, metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.623 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.620 = f32[] multiply(f32[] %divide.619, f32[] %divide.619), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.624 = f32[] multiply(f32[] %constant.623, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.625 = f32[] constant(0.0232682), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.626 = f32[] add(f32[] %multiply.624, f32[] %constant.625), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.627 = f32[] multiply(f32[] %add.626, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.628 = f32[] constant(-0.138703942), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.629 = f32[] add(f32[] %multiply.627, f32[] %constant.628), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.630 = f32[] multiply(f32[] %add.629, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.631 = f32[] constant(0.368742466), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.632 = f32[] add(f32[] %multiply.630, f32[] %constant.631), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.633 = f32[] multiply(f32[] %add.632, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.634 = f32[] constant(-0.582473278), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.635 = f32[] add(f32[] %multiply.633, f32[] %constant.634), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.636 = f32[] multiply(f32[] %add.635, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.637 = f32[] constant(0.621000469), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.638 = f32[] add(f32[] %multiply.636, f32[] %constant.637), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.639 = f32[] multiply(f32[] %add.638, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.640 = f32[] constant(-0.494451523), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.641 = f32[] add(f32[] %multiply.639, f32[] %constant.640), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.642 = f32[] multiply(f32[] %add.641, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.643 = f32[] constant(0.340488), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.644 = f32[] add(f32[] %multiply.642, f32[] %constant.643), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.645 = f32[] multiply(f32[] %add.644, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.646 = f32[] constant(-0.274112701), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.647 = f32[] add(f32[] %multiply.645, f32[] %constant.646), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.648 = f32[] multiply(f32[] %add.647, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.649 = f32[] constant(0.563825965), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.650 = f32[] add(f32[] %multiply.648, f32[] %constant.649), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.651 = f32[] constant(0), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.652 = f32[] multiply(f32[] %constant.651, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.653 = f32[] constant(-10.477664), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.654 = f32[] add(f32[] %multiply.652, f32[] %constant.653), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.655 = f32[] multiply(f32[] %add.654, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.656 = f32[] constant(12.9772), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.657 = f32[] add(f32[] %multiply.655, f32[] %constant.656), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.658 = f32[] multiply(f32[] %add.657, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.659 = f32[] constant(-7.49551868), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.660 = f32[] add(f32[] %multiply.658, f32[] %constant.659), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.661 = f32[] multiply(f32[] %add.660, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.662 = f32[] constant(2.92101908), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.663 = f32[] add(f32[] %multiply.661, f32[] %constant.662), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.664 = f32[] multiply(f32[] %add.663, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.665 = f32[] constant(-1.01526523), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.666 = f32[] add(f32[] %multiply.664, f32[] %constant.665), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.667 = f32[] multiply(f32[] %add.666, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.668 = f32[] constant(0.42184633), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.669 = f32[] add(f32[] %multiply.667, f32[] %constant.668), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.670 = f32[] multiply(f32[] %add.669, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.671 = f32[] constant(-0.282076746), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.672 = f32[] add(f32[] %multiply.670, f32[] %constant.671), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.673 = f32[] multiply(f32[] %add.672, f32[] %multiply.620), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.674 = f32[] constant(0.564189494), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.675 = f32[] add(f32[] %multiply.673, f32[] %constant.674), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.676 = f32[] select(pred[] %compare.622, f32[] %add.650, f32[] %add.675), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.678 = f32[] multiply(f32[] %multiply.677, f32[] %select.676), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.682 = f32[] select(pred[] %compare.680, f32[] %constant.681, f32[] %multiply.678), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.686 = f32[] subtract(f32[] %constant.685, f32[] %select.682), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.687 = f32[] select(pred[] %compare.684, f32[] %subtract.686, f32[] %select.682), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.688 = f32[] subtract(f32[] %constant.613, f32[] %select.687), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.689 = f32[] select(pred[] %compare.588, f32[] %multiply.612, f32[] %subtract.688), metadata={op_type="erf" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.694 = f32[] subtract(f32[] %select.689, f32[] %select.582), metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_truncated_normal)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.695 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %subtract.694), dimensions={}, metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.696 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %get-tuple-element.693, f32[3,3,16,32]{3,2,1,0} %broadcast.695), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.698 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %broadcast.697, f32[3,3,16,32]{3,2,1,0} %multiply.696), metadata={op_type="add" op_name="jit(test_conv2d)/jit(_truncated_normal)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %abs.776 = f32[3,3,16,32]{3,2,1,0} abs(f32[3,3,16,32]{3,2,1,0} %add.698), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.777 = f32[] constant(1), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.778 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.777), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.779 = pred[3,3,16,32]{3,2,1,0} compare(f32[3,3,16,32]{3,2,1,0} %abs.776, f32[3,3,16,32]{3,2,1,0} %broadcast.778), direction=EQ, type=UNSIGNED, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.780 = f32[] constant(inf), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.781 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.780), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.782 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.698, f32[3,3,16,32]{3,2,1,0} %broadcast.781), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %negate.699 = f32[3,3,16,32]{3,2,1,0} negate(f32[3,3,16,32]{3,2,1,0} %add.698), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.700 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %negate.699, f32[3,3,16,32]{3,2,1,0} %add.698), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %log-plus-one.701 = f32[3,3,16,32]{3,2,1,0} log-plus-one(f32[3,3,16,32]{3,2,1,0} %multiply.700), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %negate.702 = f32[3,3,16,32]{3,2,1,0} negate(f32[3,3,16,32]{3,2,1,0} %log-plus-one.701), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.703 = f32[] constant(5), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.704 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.703), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.705 = pred[3,3,16,32]{3,2,1,0} compare(f32[3,3,16,32]{3,2,1,0} %negate.702, f32[3,3,16,32]{3,2,1,0} %broadcast.704), direction=LT, type=UNSIGNED, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.768 = f32[] constant(1.50140941), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.769 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.768), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.770 = f32[] constant(2.83297682), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.771 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.770), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.772 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.769, f32[3,3,16,32]{3,2,1,0} %broadcast.771), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.761 = f32[] constant(0.246640727), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.762 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.761), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.763 = f32[] constant(1.00167406), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.764 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.763), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.765 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.762, f32[3,3,16,32]{3,2,1,0} %broadcast.764), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.754 = f32[] constant(-0.00417768164), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.755 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.754), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.756 = f32[] constant(0.00943887047), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.757 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.756), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.758 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.755, f32[3,3,16,32]{3,2,1,0} %broadcast.757), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.747 = f32[] constant(-0.00125372503), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.748 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.747), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.749 = f32[] constant(-0.0076224613), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.750 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.749), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.751 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.748, f32[3,3,16,32]{3,2,1,0} %broadcast.750), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.740 = f32[] constant(0.00021858087), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.741 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.740), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.742 = f32[] constant(0.00573950773), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.743 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.742), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.744 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.741, f32[3,3,16,32]{3,2,1,0} %broadcast.743), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.733 = f32[] constant(-4.39150654e-06), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.734 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.733), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.735 = f32[] constant(-0.00367342844), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.736 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.735), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.737 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.734, f32[3,3,16,32]{3,2,1,0} %broadcast.736), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.726 = f32[] constant(-3.5233877e-06), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.727 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.726), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.728 = f32[] constant(0.00134934322), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.729 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.728), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.730 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.727, f32[3,3,16,32]{3,2,1,0} %broadcast.729), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.719 = f32[] constant(3.43273939e-07), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.720 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.719), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.721 = f32[] constant(0.000100950558), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.722 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.721), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.723 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.720, f32[3,3,16,32]{3,2,1,0} %broadcast.722), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.714 = f32[] constant(2.81022636e-08), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.715 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.714), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.716 = f32[] constant(-0.000200214257), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.717 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.716), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.718 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %broadcast.715, f32[3,3,16,32]{3,2,1,0} %broadcast.717), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.706 = f32[] constant(2.5), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.707 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.706), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.708 = f32[3,3,16,32]{3,2,1,0} subtract(f32[3,3,16,32]{3,2,1,0} %negate.702, f32[3,3,16,32]{3,2,1,0} %broadcast.707), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %sqrt.709 = f32[3,3,16,32]{3,2,1,0} sqrt(f32[3,3,16,32]{3,2,1,0} %negate.702), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.710 = f32[] constant(3), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.711 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.710), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.712 = f32[3,3,16,32]{3,2,1,0} subtract(f32[3,3,16,32]{3,2,1,0} %sqrt.709, f32[3,3,16,32]{3,2,1,0} %broadcast.711), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.713 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.705, f32[3,3,16,32]{3,2,1,0} %subtract.708, f32[3,3,16,32]{3,2,1,0} %subtract.712), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.724 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %select.718, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.725 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.723, f32[3,3,16,32]{3,2,1,0} %multiply.724), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.731 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.725, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.732 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.730, f32[3,3,16,32]{3,2,1,0} %multiply.731), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.738 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.732, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.739 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.737, f32[3,3,16,32]{3,2,1,0} %multiply.738), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.745 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.739, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.746 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.744, f32[3,3,16,32]{3,2,1,0} %multiply.745), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.752 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.746, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.753 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.751, f32[3,3,16,32]{3,2,1,0} %multiply.752), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.759 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.753, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.760 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.758, f32[3,3,16,32]{3,2,1,0} %multiply.759), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.766 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.760, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.767 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.765, f32[3,3,16,32]{3,2,1,0} %multiply.766), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.773 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.767, f32[3,3,16,32]{3,2,1,0} %select.713), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.774 = f32[3,3,16,32]{3,2,1,0} add(f32[3,3,16,32]{3,2,1,0} %select.772, f32[3,3,16,32]{3,2,1,0} %multiply.773), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.775 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %add.774, f32[3,3,16,32]{3,2,1,0} %add.698), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.783 = f32[3,3,16,32]{3,2,1,0} select(pred[3,3,16,32]{3,2,1,0} %compare.779, f32[3,3,16,32]{3,2,1,0} %multiply.782, f32[3,3,16,32]{3,2,1,0} %multiply.775), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_truncated_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.784 = f32[] constant(1.41421354), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.785 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %constant.784), dimensions={}, metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.786 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %select.783, f32[3,3,16,32]{3,2,1,0} %broadcast.785), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_truncated_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.787 = (f32[3,3,16,32]{3,2,1,0}) tuple(f32[3,3,16,32]{3,2,1,0} %multiply.786)
}

%body_computation__3.792 (parameter.793: (s32[], s32[], u32[16], u32[16], u32[], u32[], u32[], u32[4], u32[4])) -> (s32[], s32[], u32[16], u32[16], u32[], u32[], u32[], u32[4], u32[4]) {
  %constant.803 = pred[] constant(false)
  %parameter.793 = (s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.794 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=0
  %constant.804 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.805 = s32[] add(s32[] %get-tuple-element.794, s32[] %constant.804), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.795 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=1
  %get-tuple-element.796 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=2
  %get-tuple-element.797 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=3
  %add.814 = u32[16]{0} add(u32[16]{0} %get-tuple-element.796, u32[16]{0} %get-tuple-element.797), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.801 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=7
  %slice.806 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.801), slice={[0:1]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(1,)\n                  start_indices=(0,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.807 = u32[] reshape(u32[1]{0} %slice.806), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.815 = u32[16]{0} broadcast(u32[] %reshape.807), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.816 = u32[16]{0} shift-left(u32[16]{0} %get-tuple-element.797, u32[16]{0} %broadcast.815), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.817 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.818 = u32[] subtract(u32[] %constant.817, u32[] %reshape.807), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.819 = u32[16]{0} broadcast(u32[] %subtract.818), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.820 = u32[16]{0} shift-right-logical(u32[16]{0} %get-tuple-element.797, u32[16]{0} %broadcast.819), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.821 = u32[16]{0} or(u32[16]{0} %shift-left.816, u32[16]{0} %shift-right-logical.820), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.822 = u32[16]{0} xor(u32[16]{0} %add.814, u32[16]{0} %or.821), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.823 = u32[16]{0} add(u32[16]{0} %add.814, u32[16]{0} %xor.822), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.808 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.801), slice={[1:2]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(2,)\n                  start_indices=(1,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.809 = u32[] reshape(u32[1]{0} %slice.808), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.824 = u32[16]{0} broadcast(u32[] %reshape.809), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.825 = u32[16]{0} shift-left(u32[16]{0} %xor.822, u32[16]{0} %broadcast.824), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.826 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.827 = u32[] subtract(u32[] %constant.826, u32[] %reshape.809), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.828 = u32[16]{0} broadcast(u32[] %subtract.827), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.829 = u32[16]{0} shift-right-logical(u32[16]{0} %xor.822, u32[16]{0} %broadcast.828), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.830 = u32[16]{0} or(u32[16]{0} %shift-left.825, u32[16]{0} %shift-right-logical.829), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.831 = u32[16]{0} xor(u32[16]{0} %add.823, u32[16]{0} %or.830), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.832 = u32[16]{0} add(u32[16]{0} %add.823, u32[16]{0} %xor.831), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.810 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.801), slice={[2:3]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(3,)\n                  start_indices=(2,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.811 = u32[] reshape(u32[1]{0} %slice.810), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.833 = u32[16]{0} broadcast(u32[] %reshape.811), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.834 = u32[16]{0} shift-left(u32[16]{0} %xor.831, u32[16]{0} %broadcast.833), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.835 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.836 = u32[] subtract(u32[] %constant.835, u32[] %reshape.811), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.837 = u32[16]{0} broadcast(u32[] %subtract.836), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.838 = u32[16]{0} shift-right-logical(u32[16]{0} %xor.831, u32[16]{0} %broadcast.837), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.839 = u32[16]{0} or(u32[16]{0} %shift-left.834, u32[16]{0} %shift-right-logical.838), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.840 = u32[16]{0} xor(u32[16]{0} %add.832, u32[16]{0} %or.839), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.841 = u32[16]{0} add(u32[16]{0} %add.832, u32[16]{0} %xor.840), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.798 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=4
  %broadcast.850 = u32[16]{0} broadcast(u32[] %get-tuple-element.798), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.851 = u32[16]{0} add(u32[16]{0} %add.841, u32[16]{0} %broadcast.850), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.812 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.801), slice={[3:4]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(4,)\n                  start_indices=(3,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.813 = u32[] reshape(u32[1]{0} %slice.812), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.842 = u32[16]{0} broadcast(u32[] %reshape.813), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.843 = u32[16]{0} shift-left(u32[16]{0} %xor.840, u32[16]{0} %broadcast.842), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.844 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.845 = u32[] subtract(u32[] %constant.844, u32[] %reshape.813), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.846 = u32[16]{0} broadcast(u32[] %subtract.845), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.847 = u32[16]{0} shift-right-logical(u32[16]{0} %xor.840, u32[16]{0} %broadcast.846), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.848 = u32[16]{0} or(u32[16]{0} %shift-left.843, u32[16]{0} %shift-right-logical.847), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.849 = u32[16]{0} xor(u32[16]{0} %add.841, u32[16]{0} %or.848), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.799 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=5
  %broadcast.852 = u32[16]{0} broadcast(u32[] %get-tuple-element.799), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.853 = u32[16]{0} add(u32[16]{0} %xor.849, u32[16]{0} %broadcast.852), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.854 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.855 = s32[] add(s32[] %get-tuple-element.794, s32[] %constant.854), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %convert.856 = u32[] convert(s32[] %add.855), metadata={op_type="convert_element_type" op_name="while/body/convert_element_type[ new_dtype=uint32\n                                 old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.857 = u32[16]{0} broadcast(u32[] %convert.856), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.858 = u32[16]{0} add(u32[16]{0} %add.853, u32[16]{0} %broadcast.857), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.800 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=6
  %get-tuple-element.802 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.793), index=8
  ROOT %tuple.859 = (s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %add.805, s32[] %get-tuple-element.795, u32[16]{0} %add.851, u32[16]{0} %add.858, u32[] %get-tuple-element.799, u32[] %get-tuple-element.800, u32[] %get-tuple-element.798, u32[4]{0} %get-tuple-element.802, u32[4]{0} %get-tuple-element.801)
}

%cond_computation__3.860 (parameter.861: (s32[], s32[], u32[16], u32[16], u32[], u32[], u32[], u32[4], u32[4])) -> pred[] {
  %parameter.861 = (s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.864 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=2
  %get-tuple-element.865 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=3
  %get-tuple-element.866 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=4
  %get-tuple-element.867 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=5
  %get-tuple-element.868 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=6
  %get-tuple-element.869 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=7
  %get-tuple-element.870 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=8
  %constant.871 = pred[] constant(false)
  %get-tuple-element.862 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=0
  %get-tuple-element.863 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.861), index=1
  ROOT %compare.872 = pred[] compare(s32[] %get-tuple-element.862, s32[] %get-tuple-element.863), direction=LT, type=UNSIGNED, metadata={op_type="lt" op_name="while/cond/lt" source_file="jax/jax_test_conv2d.py" source_line=33}
}

%jit_threefry_2x32__3.873 (parameter.874: u32[2], parameter.875: u32[32]) -> (u32[32]) {
  %constant.876 = pred[] constant(false)
  %constant.885 = pred[] constant(false), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.893 = s32[] constant(0), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.894 = s32[] constant(5), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %parameter.875 = u32[32]{0} parameter(1)
  %slice.881 = u32[16]{0} slice(u32[32]{0} %parameter.875), slice={[0:16]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(16,)\n                                                                      start_indices=(0,)\n                                                                      strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.874 = u32[2]{0} parameter(0)
  %slice.877 = u32[1]{0} slice(u32[2]{0} %parameter.874), slice={[0:1]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(1,)\n                                                                      start_indices=(0,)\n                                                                      strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.878 = u32[] reshape(u32[1]{0} %slice.877), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.889 = u32[16]{0} broadcast(u32[] %reshape.878), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.890 = u32[16]{0} add(u32[16]{0} %slice.881, u32[16]{0} %broadcast.889), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.882 = u32[16]{0} slice(u32[32]{0} %parameter.875), slice={[16:32]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(32,)\n                                                                      start_indices=(16,)\n                                                                      strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.879 = u32[1]{0} slice(u32[2]{0} %parameter.874), slice={[1:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                                      start_indices=(1,)\n                                                                      strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.880 = u32[] reshape(u32[1]{0} %slice.879), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.891 = u32[16]{0} broadcast(u32[] %reshape.880), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.892 = u32[16]{0} add(u32[16]{0} %slice.882, u32[16]{0} %broadcast.891), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.886 = u32[] xor(u32[] %reshape.878, u32[] %reshape.880), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.887 = u32[] constant(466688986), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.888 = u32[] xor(u32[] %xor.886, u32[] %constant.887), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.883 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.884 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %tuple.895 = (s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %constant.893, s32[] %constant.894, u32[16]{0} %add.890, u32[16]{0} %add.892, u32[] %reshape.880, u32[] %xor.888, u32[] %reshape.878, u32[4]{0} %constant.883, u32[4]{0} %constant.884), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %while.896 = (s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) while((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.895), condition=%cond_computation__3.860, body=%body_computation__3.792, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.897 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.898 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.899 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.900 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.901 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.902 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.903 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.904 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.905 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.896), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.906 = (s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %get-tuple-element.897, s32[] %get-tuple-element.898, u32[16]{0} %get-tuple-element.899, u32[16]{0} %get-tuple-element.900, u32[] %get-tuple-element.901, u32[] %get-tuple-element.902, u32[] %get-tuple-element.903, u32[4]{0} %get-tuple-element.904, u32[4]{0} %get-tuple-element.905), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.907 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.908 = s32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.911 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.912 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.913 = u32[] get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.914 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.915 = u32[4]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.909 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.910 = u32[16]{0} get-tuple-element((s32[], s32[], u32[16]{0}, u32[16]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.906), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.916 = (u32[16]{0}, u32[16]{0}) tuple(u32[16]{0} %get-tuple-element.909, u32[16]{0} %get-tuple-element.910)
  %get-tuple-element.917 = u32[16]{0} get-tuple-element((u32[16]{0}, u32[16]{0}) %tuple.916), index=0
  %get-tuple-element.918 = u32[16]{0} get-tuple-element((u32[16]{0}, u32[16]{0}) %tuple.916), index=1
  %concatenate.919 = u32[32]{0} concatenate(u32[16]{0} %get-tuple-element.917, u32[16]{0} %get-tuple-element.918), dimensions={0}, metadata={op_type="concatenate" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/jit(threefry_2x32)/concatenate[ dimension=0 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.920 = (u32[32]{0}) tuple(u32[32]{0} %concatenate.919)
}

%jit__uniform__1.921 (parameter.922: u32[32], parameter.923: u32[2], parameter.924: f32[], parameter.925: f32[]) -> (f32[1,1,1,32]) {
  %constant.926 = pred[] constant(false)
  %parameter.924 = f32[] parameter(2)
  %broadcast.927 = f32[1,1,1,1]{3,2,1,0} broadcast(f32[] %parameter.924), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                                              shape=(1, 1, 1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.949 = f32[1,1,1]{2,1,0} reshape(f32[1,1,1,1]{3,2,1,0} %broadcast.927), metadata={op_type="max" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/max" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.950 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[1,1,1]{2,1,0} %reshape.949), dimensions={0,1,2}, metadata={op_type="max" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/max" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.923 = u32[2]{0} parameter(1)
  %parameter.922 = u32[32]{0} parameter(0)
  %call.929 = (u32[32]{0}) call(u32[2]{0} %parameter.923, u32[32]{0} %parameter.922), to_apply=%jit_threefry_2x32__3.873, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/xla_call[ backend=None\n                                                      device=None\n                                                      donated_invars=(False, False)\n                                                      name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.930 = u32[32]{0} get-tuple-element((u32[32]{0}) %call.929), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/xla_call[ backend=None\n                                                      device=None\n                                                      donated_invars=(False, False)\n                                                      name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.931 = u32[1,1,1,32]{3,2,1,0} reshape(u32[32]{0} %get-tuple-element.930), metadata={op_type="reshape" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/reshape[ dimensions=None\n                                                     new_sizes=(1, 1, 1, 32) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.932 = u32[] constant(9), metadata={op_type="shift_right_logical" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.933 = u32[1,1,1,32]{3,2,1,0} broadcast(u32[] %constant.932), dimensions={}, metadata={op_type="shift_right_logical" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=24}
  %shift-right-logical.934 = u32[1,1,1,32]{3,2,1,0} shift-right-logical(u32[1,1,1,32]{3,2,1,0} %reshape.931, u32[1,1,1,32]{3,2,1,0} %broadcast.933), metadata={op_type="shift_right_logical" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.935 = u32[] constant(1065353216), metadata={op_type="or" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/or" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.936 = u32[1,1,1,32]{3,2,1,0} broadcast(u32[] %constant.935), dimensions={}, metadata={op_type="or" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/or" source_file="jax/jax_test_conv2d.py" source_line=24}
  %or.937 = u32[1,1,1,32]{3,2,1,0} or(u32[1,1,1,32]{3,2,1,0} %shift-right-logical.934, u32[1,1,1,32]{3,2,1,0} %broadcast.936), metadata={op_type="or" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/or" source_file="jax/jax_test_conv2d.py" source_line=24}
  %bitcast-convert.938 = f32[1,1,1,32]{3,2,1,0} bitcast-convert(u32[1,1,1,32]{3,2,1,0} %or.937), metadata={op_type="bitcast_convert_type" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/bitcast_convert_type[ new_dtype=float32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.939 = f32[] constant(1), metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.940 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.939), dimensions={}, metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.941 = f32[1,1,1,32]{3,2,1,0} subtract(f32[1,1,1,32]{3,2,1,0} %bitcast-convert.938, f32[1,1,1,32]{3,2,1,0} %broadcast.940), metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.925 = f32[] parameter(3)
  %broadcast.928 = f32[1,1,1,1]{3,2,1,0} broadcast(f32[] %parameter.925), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                                              shape=(1, 1, 1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.942 = f32[1,1,1,1]{3,2,1,0} subtract(f32[1,1,1,1]{3,2,1,0} %broadcast.928, f32[1,1,1,1]{3,2,1,0} %broadcast.927), metadata={op_type="sub" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/sub" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.943 = f32[1,1,1]{2,1,0} reshape(f32[1,1,1,1]{3,2,1,0} %subtract.942), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.944 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[1,1,1]{2,1,0} %reshape.943), dimensions={0,1,2}, metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.945 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %subtract.941, f32[1,1,1,32]{3,2,1,0} %broadcast.944), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.946 = f32[1,1,1]{2,1,0} reshape(f32[1,1,1,1]{3,2,1,0} %broadcast.927), metadata={op_type="add" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.947 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[1,1,1]{2,1,0} %reshape.946), dimensions={0,1,2}, metadata={op_type="add" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.948 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %multiply.945, f32[1,1,1,32]{3,2,1,0} %broadcast.947), metadata={op_type="add" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/add" source_file="jax/jax_test_conv2d.py" source_line=24}
  %maximum.951 = f32[1,1,1,32]{3,2,1,0} maximum(f32[1,1,1,32]{3,2,1,0} %broadcast.950, f32[1,1,1,32]{3,2,1,0} %add.948), metadata={op_type="max" op_name="jit(test_conv2d)/jit(_normal)/jit(_uniform)/max" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.952 = (f32[1,1,1,32]{3,2,1,0}) tuple(f32[1,1,1,32]{3,2,1,0} %maximum.951)
}

%jit__normal.953 (parameter.954: u32[32], parameter.955: u32[2]) -> (f32[1,1,1,32]) {
  %constant.956 = pred[] constant(false)
  %parameter.954 = u32[32]{0} parameter(0)
  %parameter.955 = u32[2]{0} parameter(1)
  %constant.957 = f32[] constant(-0.99999994), metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_normal)/xla_call[ backend=None\n                                        device=None\n                                        donated_invars=(False, False, False, False)\n                                        name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.958 = f32[] constant(1), metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_normal)/xla_call[ backend=None\n                                        device=None\n                                        donated_invars=(False, False, False, False)\n                                        name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %call.959 = (f32[1,1,1,32]{3,2,1,0}) call(u32[32]{0} %parameter.954, u32[2]{0} %parameter.955, f32[] %constant.957, f32[] %constant.958), to_apply=%jit__uniform__1.921, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_normal)/xla_call[ backend=None\n                                        device=None\n                                        donated_invars=(False, False, False, False)\n                                        name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.960 = f32[1,1,1,32]{3,2,1,0} get-tuple-element((f32[1,1,1,32]{3,2,1,0}) %call.959), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_normal)/xla_call[ backend=None\n                                        device=None\n                                        donated_invars=(False, False, False, False)\n                                        name=_uniform ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %abs.1038 = f32[1,1,1,32]{3,2,1,0} abs(f32[1,1,1,32]{3,2,1,0} %get-tuple-element.960), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1039 = f32[] constant(1), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1040 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1039), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.1041 = pred[1,1,1,32]{3,2,1,0} compare(f32[1,1,1,32]{3,2,1,0} %abs.1038, f32[1,1,1,32]{3,2,1,0} %broadcast.1040), direction=EQ, type=UNSIGNED, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1042 = f32[] constant(inf), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1043 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1042), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1044 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %get-tuple-element.960, f32[1,1,1,32]{3,2,1,0} %broadcast.1043), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %negate.961 = f32[1,1,1,32]{3,2,1,0} negate(f32[1,1,1,32]{3,2,1,0} %get-tuple-element.960), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.962 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %negate.961, f32[1,1,1,32]{3,2,1,0} %get-tuple-element.960), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %log-plus-one.963 = f32[1,1,1,32]{3,2,1,0} log-plus-one(f32[1,1,1,32]{3,2,1,0} %multiply.962), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %negate.964 = f32[1,1,1,32]{3,2,1,0} negate(f32[1,1,1,32]{3,2,1,0} %log-plus-one.963), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.965 = f32[] constant(5), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.966 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.965), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %compare.967 = pred[1,1,1,32]{3,2,1,0} compare(f32[1,1,1,32]{3,2,1,0} %negate.964, f32[1,1,1,32]{3,2,1,0} %broadcast.966), direction=LT, type=UNSIGNED, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1030 = f32[] constant(1.50140941), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1031 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1030), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1032 = f32[] constant(2.83297682), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1033 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1032), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.1034 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.1031, f32[1,1,1,32]{3,2,1,0} %broadcast.1033), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1023 = f32[] constant(0.246640727), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1024 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1023), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1025 = f32[] constant(1.00167406), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1026 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1025), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.1027 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.1024, f32[1,1,1,32]{3,2,1,0} %broadcast.1026), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1016 = f32[] constant(-0.00417768164), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1017 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1016), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1018 = f32[] constant(0.00943887047), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1019 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1018), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.1020 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.1017, f32[1,1,1,32]{3,2,1,0} %broadcast.1019), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1009 = f32[] constant(-0.00125372503), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1010 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1009), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1011 = f32[] constant(-0.0076224613), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1012 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1011), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.1013 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.1010, f32[1,1,1,32]{3,2,1,0} %broadcast.1012), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1002 = f32[] constant(0.00021858087), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1003 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1002), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1004 = f32[] constant(0.00573950773), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1005 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1004), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.1006 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.1003, f32[1,1,1,32]{3,2,1,0} %broadcast.1005), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.995 = f32[] constant(-4.39150654e-06), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.996 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.995), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.997 = f32[] constant(-0.00367342844), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.998 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.997), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.999 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.996, f32[1,1,1,32]{3,2,1,0} %broadcast.998), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.988 = f32[] constant(-3.5233877e-06), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.989 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.988), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.990 = f32[] constant(0.00134934322), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.991 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.990), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.992 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.989, f32[1,1,1,32]{3,2,1,0} %broadcast.991), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.981 = f32[] constant(3.43273939e-07), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.982 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.981), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.983 = f32[] constant(0.000100950558), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.984 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.983), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.985 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.982, f32[1,1,1,32]{3,2,1,0} %broadcast.984), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.976 = f32[] constant(2.81022636e-08), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.977 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.976), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.978 = f32[] constant(-0.000200214257), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.979 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.978), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.980 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %broadcast.977, f32[1,1,1,32]{3,2,1,0} %broadcast.979), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.968 = f32[] constant(2.5), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.969 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.968), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.970 = f32[1,1,1,32]{3,2,1,0} subtract(f32[1,1,1,32]{3,2,1,0} %negate.964, f32[1,1,1,32]{3,2,1,0} %broadcast.969), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %sqrt.971 = f32[1,1,1,32]{3,2,1,0} sqrt(f32[1,1,1,32]{3,2,1,0} %negate.964), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.972 = f32[] constant(3), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.973 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.972), dimensions={}, metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %subtract.974 = f32[1,1,1,32]{3,2,1,0} subtract(f32[1,1,1,32]{3,2,1,0} %sqrt.971, f32[1,1,1,32]{3,2,1,0} %broadcast.973), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.975 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.967, f32[1,1,1,32]{3,2,1,0} %subtract.970, f32[1,1,1,32]{3,2,1,0} %subtract.974), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.986 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %select.980, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.987 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.985, f32[1,1,1,32]{3,2,1,0} %multiply.986), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.993 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.987, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.994 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.992, f32[1,1,1,32]{3,2,1,0} %multiply.993), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1000 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.994, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.1001 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.999, f32[1,1,1,32]{3,2,1,0} %multiply.1000), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1007 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.1001, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.1008 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.1006, f32[1,1,1,32]{3,2,1,0} %multiply.1007), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1014 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.1008, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.1015 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.1013, f32[1,1,1,32]{3,2,1,0} %multiply.1014), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1021 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.1015, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.1022 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.1020, f32[1,1,1,32]{3,2,1,0} %multiply.1021), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1028 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.1022, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.1029 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.1027, f32[1,1,1,32]{3,2,1,0} %multiply.1028), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1035 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.1029, f32[1,1,1,32]{3,2,1,0} %select.975), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %add.1036 = f32[1,1,1,32]{3,2,1,0} add(f32[1,1,1,32]{3,2,1,0} %select.1034, f32[1,1,1,32]{3,2,1,0} %multiply.1035), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1037 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %add.1036, f32[1,1,1,32]{3,2,1,0} %get-tuple-element.960), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %select.1045 = f32[1,1,1,32]{3,2,1,0} select(pred[1,1,1,32]{3,2,1,0} %compare.1041, f32[1,1,1,32]{3,2,1,0} %multiply.1044, f32[1,1,1,32]{3,2,1,0} %multiply.1037), metadata={op_type="erf_inv" op_name="jit(test_conv2d)/jit(_normal)/erf_inv" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1046 = f32[] constant(1.41421354), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1047 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1046), dimensions={}, metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1048 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %select.1045, f32[1,1,1,32]{3,2,1,0} %broadcast.1047), metadata={op_type="mul" op_name="jit(test_conv2d)/jit(_normal)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.1049 = (f32[1,1,1,32]{3,2,1,0}) tuple(f32[1,1,1,32]{3,2,1,0} %multiply.1048)
}

%body_computation__4.1055 (parameter.1056: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4]) {
  %constant.1066 = pred[] constant(false)
  %parameter.1056 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.1057 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=0
  %constant.1067 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1068 = s32[] add(s32[] %get-tuple-element.1057, s32[] %constant.1067), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1058 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=1
  %get-tuple-element.1059 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=2
  %get-tuple-element.1060 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=3
  %add.1077 = u32[2]{0} add(u32[2]{0} %get-tuple-element.1059, u32[2]{0} %get-tuple-element.1060), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1064 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=7
  %slice.1069 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1064), slice={[0:1]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(1,)\n                  start_indices=(0,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1070 = u32[] reshape(u32[1]{0} %slice.1069), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1078 = u32[2]{0} broadcast(u32[] %reshape.1070), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1079 = u32[2]{0} shift-left(u32[2]{0} %get-tuple-element.1060, u32[2]{0} %broadcast.1078), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1080 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1081 = u32[] subtract(u32[] %constant.1080, u32[] %reshape.1070), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1082 = u32[2]{0} broadcast(u32[] %subtract.1081), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1083 = u32[2]{0} shift-right-logical(u32[2]{0} %get-tuple-element.1060, u32[2]{0} %broadcast.1082), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1084 = u32[2]{0} or(u32[2]{0} %shift-left.1079, u32[2]{0} %shift-right-logical.1083), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1085 = u32[2]{0} xor(u32[2]{0} %add.1077, u32[2]{0} %or.1084), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1086 = u32[2]{0} add(u32[2]{0} %add.1077, u32[2]{0} %xor.1085), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1071 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1064), slice={[1:2]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(2,)\n                  start_indices=(1,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1072 = u32[] reshape(u32[1]{0} %slice.1071), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1087 = u32[2]{0} broadcast(u32[] %reshape.1072), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1088 = u32[2]{0} shift-left(u32[2]{0} %xor.1085, u32[2]{0} %broadcast.1087), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1089 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1090 = u32[] subtract(u32[] %constant.1089, u32[] %reshape.1072), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1091 = u32[2]{0} broadcast(u32[] %subtract.1090), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1092 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.1085, u32[2]{0} %broadcast.1091), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1093 = u32[2]{0} or(u32[2]{0} %shift-left.1088, u32[2]{0} %shift-right-logical.1092), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1094 = u32[2]{0} xor(u32[2]{0} %add.1086, u32[2]{0} %or.1093), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1095 = u32[2]{0} add(u32[2]{0} %add.1086, u32[2]{0} %xor.1094), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1073 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1064), slice={[2:3]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(3,)\n                  start_indices=(2,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1074 = u32[] reshape(u32[1]{0} %slice.1073), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1096 = u32[2]{0} broadcast(u32[] %reshape.1074), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1097 = u32[2]{0} shift-left(u32[2]{0} %xor.1094, u32[2]{0} %broadcast.1096), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1098 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1099 = u32[] subtract(u32[] %constant.1098, u32[] %reshape.1074), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1100 = u32[2]{0} broadcast(u32[] %subtract.1099), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1101 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.1094, u32[2]{0} %broadcast.1100), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1102 = u32[2]{0} or(u32[2]{0} %shift-left.1097, u32[2]{0} %shift-right-logical.1101), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1103 = u32[2]{0} xor(u32[2]{0} %add.1095, u32[2]{0} %or.1102), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1104 = u32[2]{0} add(u32[2]{0} %add.1095, u32[2]{0} %xor.1103), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1061 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=4
  %broadcast.1113 = u32[2]{0} broadcast(u32[] %get-tuple-element.1061), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1114 = u32[2]{0} add(u32[2]{0} %add.1104, u32[2]{0} %broadcast.1113), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1075 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1064), slice={[3:4]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(4,)\n                  start_indices=(3,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1076 = u32[] reshape(u32[1]{0} %slice.1075), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1105 = u32[2]{0} broadcast(u32[] %reshape.1076), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1106 = u32[2]{0} shift-left(u32[2]{0} %xor.1103, u32[2]{0} %broadcast.1105), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1107 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1108 = u32[] subtract(u32[] %constant.1107, u32[] %reshape.1076), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1109 = u32[2]{0} broadcast(u32[] %subtract.1108), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1110 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.1103, u32[2]{0} %broadcast.1109), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1111 = u32[2]{0} or(u32[2]{0} %shift-left.1106, u32[2]{0} %shift-right-logical.1110), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1112 = u32[2]{0} xor(u32[2]{0} %add.1104, u32[2]{0} %or.1111), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1062 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=5
  %broadcast.1115 = u32[2]{0} broadcast(u32[] %get-tuple-element.1062), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1116 = u32[2]{0} add(u32[2]{0} %xor.1112, u32[2]{0} %broadcast.1115), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1117 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1118 = s32[] add(s32[] %get-tuple-element.1057, s32[] %constant.1117), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %convert.1119 = u32[] convert(s32[] %add.1118), metadata={op_type="convert_element_type" op_name="while/body/convert_element_type[ new_dtype=uint32\n                                 old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1120 = u32[2]{0} broadcast(u32[] %convert.1119), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1121 = u32[2]{0} add(u32[2]{0} %add.1116, u32[2]{0} %broadcast.1120), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1063 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=6
  %get-tuple-element.1065 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1056), index=8
  ROOT %tuple.1122 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %add.1068, s32[] %get-tuple-element.1058, u32[2]{0} %add.1114, u32[2]{0} %add.1121, u32[] %get-tuple-element.1062, u32[] %get-tuple-element.1063, u32[] %get-tuple-element.1061, u32[4]{0} %get-tuple-element.1065, u32[4]{0} %get-tuple-element.1064)
}

%cond_computation__4.1123 (parameter.1124: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> pred[] {
  %parameter.1124 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.1127 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=2
  %get-tuple-element.1128 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=3
  %get-tuple-element.1129 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=4
  %get-tuple-element.1130 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=5
  %get-tuple-element.1131 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=6
  %get-tuple-element.1132 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=7
  %get-tuple-element.1133 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=8
  %constant.1134 = pred[] constant(false)
  %get-tuple-element.1125 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=0
  %get-tuple-element.1126 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1124), index=1
  ROOT %compare.1135 = pred[] compare(s32[] %get-tuple-element.1125, s32[] %get-tuple-element.1126), direction=LT, type=UNSIGNED, metadata={op_type="lt" op_name="while/cond/lt" source_file="jax/jax_test_conv2d.py" source_line=33}
}

%jit_threefry_2x32__4.1136 (parameter.1137: u32[2], parameter.1138: u32[4]) -> (u32[4]) {
  %constant.1139 = pred[] constant(false)
  %constant.1148 = pred[] constant(false), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1156 = s32[] constant(0), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1157 = s32[] constant(5), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %parameter.1138 = u32[4]{0} parameter(1)
  %slice.1144 = u32[2]{0} slice(u32[4]{0} %parameter.1138), slice={[0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(0,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.1137 = u32[2]{0} parameter(0)
  %slice.1140 = u32[1]{0} slice(u32[2]{0} %parameter.1137), slice={[0:1]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(1,)\n                                                       start_indices=(0,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1141 = u32[] reshape(u32[1]{0} %slice.1140), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1152 = u32[2]{0} broadcast(u32[] %reshape.1141), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1153 = u32[2]{0} add(u32[2]{0} %slice.1144, u32[2]{0} %broadcast.1152), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1145 = u32[2]{0} slice(u32[4]{0} %parameter.1138), slice={[2:4]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(4,)\n                                                       start_indices=(2,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.1142 = u32[1]{0} slice(u32[2]{0} %parameter.1137), slice={[1:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(1,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1143 = u32[] reshape(u32[1]{0} %slice.1142), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1154 = u32[2]{0} broadcast(u32[] %reshape.1143), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1155 = u32[2]{0} add(u32[2]{0} %slice.1145, u32[2]{0} %broadcast.1154), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1149 = u32[] xor(u32[] %reshape.1141, u32[] %reshape.1143), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1150 = u32[] constant(466688986), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1151 = u32[] xor(u32[] %xor.1149, u32[] %constant.1150), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1146 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1147 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %tuple.1158 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %constant.1156, s32[] %constant.1157, u32[2]{0} %add.1153, u32[2]{0} %add.1155, u32[] %reshape.1143, u32[] %xor.1151, u32[] %reshape.1141, u32[4]{0} %constant.1146, u32[4]{0} %constant.1147), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %while.1159 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) while((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1158), condition=%cond_computation__4.1123, body=%body_computation__4.1055, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1160 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1161 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1162 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1163 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1164 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1165 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1166 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1167 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1168 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1159), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.1169 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %get-tuple-element.1160, s32[] %get-tuple-element.1161, u32[2]{0} %get-tuple-element.1162, u32[2]{0} %get-tuple-element.1163, u32[] %get-tuple-element.1164, u32[] %get-tuple-element.1165, u32[] %get-tuple-element.1166, u32[4]{0} %get-tuple-element.1167, u32[4]{0} %get-tuple-element.1168), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1170 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1171 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1174 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1175 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1176 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1177 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1178 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1172 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1173 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1169), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.1179 = (u32[2]{0}, u32[2]{0}) tuple(u32[2]{0} %get-tuple-element.1172, u32[2]{0} %get-tuple-element.1173)
  %get-tuple-element.1180 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.1179), index=0
  %get-tuple-element.1181 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.1179), index=1
  %concatenate.1182 = u32[4]{0} concatenate(u32[2]{0} %get-tuple-element.1180, u32[2]{0} %get-tuple-element.1181), dimensions={0}, metadata={op_type="concatenate" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/concatenate[ dimension=0 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.1183 = (u32[4]{0}) tuple(u32[4]{0} %concatenate.1182)
}

%jit__split__2.1184 (parameter.1185: u32[4], parameter.1186: u32[2]) -> (u32[2,2]) {
  %constant.1187 = pred[] constant(false)
  %parameter.1186 = u32[2]{0} parameter(1)
  %parameter.1185 = u32[4]{0} parameter(0)
  %call.1188 = (u32[4]{0}) call(u32[2]{0} %parameter.1186, u32[4]{0} %parameter.1185), to_apply=%jit_threefry_2x32__4.1136, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.1189 = u32[4]{0} get-tuple-element((u32[4]{0}) %call.1188), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1190 = u32[2,2]{1,0} reshape(u32[4]{0} %get-tuple-element.1189), metadata={op_type="reshape" op_name="jit(test_conv2d)/jit(_split)/reshape[ dimensions=None\n                                      new_sizes=(2, 2) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.1191 = (u32[2,2]{1,0}) tuple(u32[2,2]{1,0} %reshape.1190)
}

%body_computation__5.1198 (parameter.1199: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4]) {
  %constant.1209 = pred[] constant(false)
  %parameter.1199 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.1200 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=0
  %constant.1210 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1211 = s32[] add(s32[] %get-tuple-element.1200, s32[] %constant.1210), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1201 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=1
  %get-tuple-element.1202 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=2
  %get-tuple-element.1203 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=3
  %add.1220 = u32[2]{0} add(u32[2]{0} %get-tuple-element.1202, u32[2]{0} %get-tuple-element.1203), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1207 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=7
  %slice.1212 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1207), slice={[0:1]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(1,)\n                  start_indices=(0,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1213 = u32[] reshape(u32[1]{0} %slice.1212), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1221 = u32[2]{0} broadcast(u32[] %reshape.1213), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1222 = u32[2]{0} shift-left(u32[2]{0} %get-tuple-element.1203, u32[2]{0} %broadcast.1221), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1223 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1224 = u32[] subtract(u32[] %constant.1223, u32[] %reshape.1213), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1225 = u32[2]{0} broadcast(u32[] %subtract.1224), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1226 = u32[2]{0} shift-right-logical(u32[2]{0} %get-tuple-element.1203, u32[2]{0} %broadcast.1225), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1227 = u32[2]{0} or(u32[2]{0} %shift-left.1222, u32[2]{0} %shift-right-logical.1226), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1228 = u32[2]{0} xor(u32[2]{0} %add.1220, u32[2]{0} %or.1227), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1229 = u32[2]{0} add(u32[2]{0} %add.1220, u32[2]{0} %xor.1228), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1214 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1207), slice={[1:2]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(2,)\n                  start_indices=(1,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1215 = u32[] reshape(u32[1]{0} %slice.1214), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1230 = u32[2]{0} broadcast(u32[] %reshape.1215), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1231 = u32[2]{0} shift-left(u32[2]{0} %xor.1228, u32[2]{0} %broadcast.1230), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1232 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1233 = u32[] subtract(u32[] %constant.1232, u32[] %reshape.1215), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1234 = u32[2]{0} broadcast(u32[] %subtract.1233), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1235 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.1228, u32[2]{0} %broadcast.1234), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1236 = u32[2]{0} or(u32[2]{0} %shift-left.1231, u32[2]{0} %shift-right-logical.1235), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1237 = u32[2]{0} xor(u32[2]{0} %add.1229, u32[2]{0} %or.1236), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1238 = u32[2]{0} add(u32[2]{0} %add.1229, u32[2]{0} %xor.1237), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1216 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1207), slice={[2:3]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(3,)\n                  start_indices=(2,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1217 = u32[] reshape(u32[1]{0} %slice.1216), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1239 = u32[2]{0} broadcast(u32[] %reshape.1217), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1240 = u32[2]{0} shift-left(u32[2]{0} %xor.1237, u32[2]{0} %broadcast.1239), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1241 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1242 = u32[] subtract(u32[] %constant.1241, u32[] %reshape.1217), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1243 = u32[2]{0} broadcast(u32[] %subtract.1242), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1244 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.1237, u32[2]{0} %broadcast.1243), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1245 = u32[2]{0} or(u32[2]{0} %shift-left.1240, u32[2]{0} %shift-right-logical.1244), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1246 = u32[2]{0} xor(u32[2]{0} %add.1238, u32[2]{0} %or.1245), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1247 = u32[2]{0} add(u32[2]{0} %add.1238, u32[2]{0} %xor.1246), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1204 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=4
  %broadcast.1256 = u32[2]{0} broadcast(u32[] %get-tuple-element.1204), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1257 = u32[2]{0} add(u32[2]{0} %add.1247, u32[2]{0} %broadcast.1256), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1218 = u32[1]{0} slice(u32[4]{0} %get-tuple-element.1207), slice={[3:4]}, metadata={op_type="slice" op_name="while/body/slice[ limit_indices=(4,)\n                  start_indices=(3,)\n                  strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %reshape.1219 = u32[] reshape(u32[1]{0} %slice.1218), metadata={op_type="squeeze" op_name="while/body/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1248 = u32[2]{0} broadcast(u32[] %reshape.1219), dimensions={}, metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-left.1249 = u32[2]{0} shift-left(u32[2]{0} %xor.1246, u32[2]{0} %broadcast.1248), metadata={op_type="shift_left" op_name="while/body/shift_left" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1250 = u32[] constant(32), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %subtract.1251 = u32[] subtract(u32[] %constant.1250, u32[] %reshape.1219), metadata={op_type="sub" op_name="while/body/sub" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1252 = u32[2]{0} broadcast(u32[] %subtract.1251), dimensions={}, metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %shift-right-logical.1253 = u32[2]{0} shift-right-logical(u32[2]{0} %xor.1246, u32[2]{0} %broadcast.1252), metadata={op_type="shift_right_logical" op_name="while/body/shift_right_logical" source_file="jax/jax_test_conv2d.py" source_line=33}
  %or.1254 = u32[2]{0} or(u32[2]{0} %shift-left.1249, u32[2]{0} %shift-right-logical.1253), metadata={op_type="or" op_name="while/body/or" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1255 = u32[2]{0} xor(u32[2]{0} %add.1247, u32[2]{0} %or.1254), metadata={op_type="xor" op_name="while/body/xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1205 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=5
  %broadcast.1258 = u32[2]{0} broadcast(u32[] %get-tuple-element.1205), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1259 = u32[2]{0} add(u32[2]{0} %xor.1255, u32[2]{0} %broadcast.1258), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1260 = s32[] constant(1), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1261 = s32[] add(s32[] %get-tuple-element.1200, s32[] %constant.1260), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %convert.1262 = u32[] convert(s32[] %add.1261), metadata={op_type="convert_element_type" op_name="while/body/convert_element_type[ new_dtype=uint32\n                                 old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %broadcast.1263 = u32[2]{0} broadcast(u32[] %convert.1262), dimensions={}, metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1264 = u32[2]{0} add(u32[2]{0} %add.1259, u32[2]{0} %broadcast.1263), metadata={op_type="add" op_name="while/body/add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1206 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=6
  %get-tuple-element.1208 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1199), index=8
  ROOT %tuple.1265 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %add.1211, s32[] %get-tuple-element.1201, u32[2]{0} %add.1257, u32[2]{0} %add.1264, u32[] %get-tuple-element.1205, u32[] %get-tuple-element.1206, u32[] %get-tuple-element.1204, u32[4]{0} %get-tuple-element.1208, u32[4]{0} %get-tuple-element.1207)
}

%cond_computation__5.1266 (parameter.1267: (s32[], s32[], u32[2], u32[2], u32[], u32[], u32[], u32[4], u32[4])) -> pred[] {
  %parameter.1267 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) parameter(0)
  %get-tuple-element.1270 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=2
  %get-tuple-element.1271 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=3
  %get-tuple-element.1272 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=4
  %get-tuple-element.1273 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=5
  %get-tuple-element.1274 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=6
  %get-tuple-element.1275 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=7
  %get-tuple-element.1276 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=8
  %constant.1277 = pred[] constant(false)
  %get-tuple-element.1268 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=0
  %get-tuple-element.1269 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %parameter.1267), index=1
  ROOT %compare.1278 = pred[] compare(s32[] %get-tuple-element.1268, s32[] %get-tuple-element.1269), direction=LT, type=UNSIGNED, metadata={op_type="lt" op_name="while/cond/lt" source_file="jax/jax_test_conv2d.py" source_line=33}
}

%jit_threefry_2x32__5.1279 (parameter.1280: u32[2], parameter.1281: u32[4]) -> (u32[4]) {
  %constant.1282 = pred[] constant(false)
  %constant.1291 = pred[] constant(false), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1299 = s32[] constant(0), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1300 = s32[] constant(5), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %parameter.1281 = u32[4]{0} parameter(1)
  %slice.1287 = u32[2]{0} slice(u32[4]{0} %parameter.1281), slice={[0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(0,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %parameter.1280 = u32[2]{0} parameter(0)
  %slice.1283 = u32[1]{0} slice(u32[2]{0} %parameter.1280), slice={[0:1]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(1,)\n                                                       start_indices=(0,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1284 = u32[] reshape(u32[1]{0} %slice.1283), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1295 = u32[2]{0} broadcast(u32[] %reshape.1284), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1296 = u32[2]{0} add(u32[2]{0} %slice.1287, u32[2]{0} %broadcast.1295), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %slice.1288 = u32[2]{0} slice(u32[4]{0} %parameter.1281), slice={[2:4]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(4,)\n                                                       start_indices=(2,)\n                                                       strides=None ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.1285 = u32[1]{0} slice(u32[2]{0} %parameter.1280), slice={[1:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/slice[ limit_indices=(2,)\n                                                       start_indices=(1,)\n                                                       strides=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1286 = u32[] reshape(u32[1]{0} %slice.1285), metadata={op_type="squeeze" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1297 = u32[2]{0} broadcast(u32[] %reshape.1286), dimensions={}, metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %add.1298 = u32[2]{0} add(u32[2]{0} %slice.1288, u32[2]{0} %broadcast.1297), metadata={op_type="add" op_name="add" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1292 = u32[] xor(u32[] %reshape.1284, u32[] %reshape.1286), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1293 = u32[] constant(466688986), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %xor.1294 = u32[] xor(u32[] %xor.1292, u32[] %constant.1293), metadata={op_type="xor" op_name="xor" source_file="jax/jax_test_conv2d.py" source_line=33}
  %constant.1289 = u32[4]{0} constant({13, 15, 26, 6}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1290 = u32[4]{0} constant({17, 29, 16, 24}), metadata={op_type="threefry2x32" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/threefry2x32" source_file="jax/jax_test_conv2d.py" source_line=24}
  %tuple.1301 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %constant.1299, s32[] %constant.1300, u32[2]{0} %add.1296, u32[2]{0} %add.1298, u32[] %reshape.1286, u32[] %xor.1294, u32[] %reshape.1284, u32[4]{0} %constant.1289, u32[4]{0} %constant.1290), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %while.1302 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) while((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1301), condition=%cond_computation__5.1266, body=%body_computation__5.1198, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1303 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1304 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1305 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1306 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1307 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1308 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1309 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1310 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1311 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %while.1302), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.1312 = (s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) tuple(s32[] %get-tuple-element.1303, s32[] %get-tuple-element.1304, u32[2]{0} %get-tuple-element.1305, u32[2]{0} %get-tuple-element.1306, u32[] %get-tuple-element.1307, u32[] %get-tuple-element.1308, u32[] %get-tuple-element.1309, u32[4]{0} %get-tuple-element.1310, u32[4]{0} %get-tuple-element.1311), metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1313 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=0, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1314 = s32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=1, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1317 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=4, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1318 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=5, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1319 = u32[] get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=6, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1320 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=7, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1321 = u32[4]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=8, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1315 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=2, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %get-tuple-element.1316 = u32[2]{0} get-tuple-element((s32[], s32[], u32[2]{0}, u32[2]{0}, u32[], u32[], u32[], u32[4]{0}, u32[4]{0}) %tuple.1312), index=3, metadata={op_type="while" op_name="while[ body_nconsts=0\n       cond_nconsts=0 ]" source_file="jax/jax_test_conv2d.py" source_line=33}
  %tuple.1322 = (u32[2]{0}, u32[2]{0}) tuple(u32[2]{0} %get-tuple-element.1315, u32[2]{0} %get-tuple-element.1316)
  %get-tuple-element.1323 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.1322), index=0
  %get-tuple-element.1324 = u32[2]{0} get-tuple-element((u32[2]{0}, u32[2]{0}) %tuple.1322), index=1
  %concatenate.1325 = u32[4]{0} concatenate(u32[2]{0} %get-tuple-element.1323, u32[2]{0} %get-tuple-element.1324), dimensions={0}, metadata={op_type="concatenate" op_name="jit(test_conv2d)/jit(_split)/jit(threefry_2x32)/concatenate[ dimension=0 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.1326 = (u32[4]{0}) tuple(u32[4]{0} %concatenate.1325)
}

%jit__split__3.1327 (parameter.1328: u32[4], parameter.1329: u32[2]) -> (u32[2,2]) {
  %constant.1330 = pred[] constant(false)
  %parameter.1329 = u32[2]{0} parameter(1)
  %parameter.1328 = u32[4]{0} parameter(0)
  %call.1331 = (u32[4]{0}) call(u32[2]{0} %parameter.1329, u32[4]{0} %parameter.1328), to_apply=%jit_threefry_2x32__5.1279, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.1332 = u32[4]{0} get-tuple-element((u32[4]{0}) %call.1331), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/jit(_split)/xla_call[ backend=None\n                                       device=None\n                                       donated_invars=(False, False)\n                                       name=threefry_2x32 ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1333 = u32[2,2]{1,0} reshape(u32[4]{0} %get-tuple-element.1332), metadata={op_type="reshape" op_name="jit(test_conv2d)/jit(_split)/reshape[ dimensions=None\n                                      new_sizes=(2, 2) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  ROOT %tuple.1334 = (u32[2,2]{1,0}) tuple(u32[2,2]{1,0} %reshape.1333)
}

%primitive_computation_max.1351 (parameter.1352: f32[], parameter.1353: f32[]) -> f32[] {
  %parameter.1352 = f32[] parameter(0), metadata={op_type="max" op_name="max"}
  %parameter.1353 = f32[] parameter(1), metadata={op_type="max" op_name="max"}
  ROOT %maximum.1354 = f32[] maximum(f32[] %parameter.1352, f32[] %parameter.1353), metadata={op_type="max" op_name="max"}
}

ENTRY %jit_test_conv2d.1357 () -> (f32[32,63,63,32]) {
  %constant.7 = pred[] constant(false)
  %iota.5 = u32[4]{0} iota(), iota_dimension=0
  %iota.1 = u32[4]{0} iota(), iota_dimension=0
  %constant.8 = s32[] constant(0), metadata={op_type="convert_element_type" op_name="jit(test_conv2d)/convert_element_type[ new_dtype=uint32\n                                       old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=22}
  %convert.9 = u32[] convert(s32[] %constant.8), metadata={op_type="convert_element_type" op_name="jit(test_conv2d)/convert_element_type[ new_dtype=uint32\n                                       old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=22}
  %reshape.10 = u32[1]{0} reshape(u32[] %convert.9), metadata={op_type="reshape" op_name="jit(test_conv2d)/reshape[ dimensions=None\n                          new_sizes=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=22}
  %constant.11 = s32[] constant(0), metadata={op_type="and" op_name="jit(test_conv2d)/and" source_file="jax/jax_test_conv2d.py" source_line=22}
  %constant.12 = s32[] constant(-1), metadata={op_type="and" op_name="jit(test_conv2d)/and" source_file="jax/jax_test_conv2d.py" source_line=22}
  %and.13 = s32[] and(s32[] %constant.11, s32[] %constant.12), metadata={op_type="and" op_name="jit(test_conv2d)/and" source_file="jax/jax_test_conv2d.py" source_line=22}
  %convert.14 = u32[] convert(s32[] %and.13), metadata={op_type="convert_element_type" op_name="jit(test_conv2d)/convert_element_type[ new_dtype=uint32\n                                       old_dtype=int32 ]" source_file="jax/jax_test_conv2d.py" source_line=22}
  %reshape.15 = u32[1]{0} reshape(u32[] %convert.14), metadata={op_type="reshape" op_name="jit(test_conv2d)/reshape[ dimensions=None\n                          new_sizes=(1,) ]" source_file="jax/jax_test_conv2d.py" source_line=22}
  %concatenate.16 = u32[2]{0} concatenate(u32[1]{0} %reshape.10, u32[1]{0} %reshape.15), dimensions={0}, metadata={op_type="concatenate" op_name="jit(test_conv2d)/concatenate[ dimension=0 ]" source_file="jax/jax_test_conv2d.py" source_line=22}
  %call.154 = (u32[2,2]{1,0}) call(u32[4]{0} %iota.1, u32[2]{0} %concatenate.16), to_apply=%jit__split.146, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.155 = u32[2,2]{1,0} get-tuple-element((u32[2,2]{1,0}) %call.154), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.156 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.155), slice={[0:1], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(1, 2)\n                        start_indices=(0, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.157 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.156), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %call.1192 = (u32[2,2]{1,0}) call(u32[4]{0} %iota.5, u32[2]{0} %reshape.157), to_apply=%jit__split__2.1184, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.1193 = u32[2,2]{1,0} get-tuple-element((u32[2,2]{1,0}) %call.1192), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.1196 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.1193), slice={[1:2], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(2, 2)\n                        start_indices=(1, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1197 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.1196), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %iota.6 = u32[4]{0} iota(), iota_dimension=0
  %slice.1194 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.1193), slice={[0:1], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(1, 2)\n                        start_indices=(0, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1195 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.1194), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %call.1335 = (u32[2,2]{1,0}) call(u32[4]{0} %iota.6, u32[2]{0} %reshape.1195), to_apply=%jit__split__3.1327, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.1336 = u32[2,2]{1,0} get-tuple-element((u32[2,2]{1,0}) %call.1335), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.1337 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.1336), slice={[0:1], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(1, 2)\n                        start_indices=(0, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1338 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.1337), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.1339 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.1336), slice={[1:2], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(2, 2)\n                        start_indices=(1, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1340 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.1339), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1341 = f32[] constant(0), metadata={op_type="broadcast_in_dim" op_name="jit(test_conv2d)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                   shape=(32, 64, 64, 16) ]" source_file="jax/jax_test_conv2d.py" source_line=27}
  %broadcast.1342 = f32[32,64,64,16]{3,2,1,0} broadcast(f32[] %constant.1341), dimensions={}, metadata={op_type="broadcast_in_dim" op_name="jit(test_conv2d)/broadcast_in_dim[ broadcast_dimensions=(  )\n                                   shape=(32, 64, 64, 16) ]" source_file="jax/jax_test_conv2d.py" source_line=27}
  %iota.3 = u32[4608]{0} iota(), iota_dimension=0
  %iota.2 = u32[4]{0} iota(), iota_dimension=0
  %slice.158 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.155), slice={[1:2], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(2, 2)\n                        start_indices=(1, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.159 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.158), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %call.297 = (u32[2,2]{1,0}) call(u32[4]{0} %iota.2, u32[2]{0} %reshape.159), to_apply=%jit__split__1.289, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.298 = u32[2,2]{1,0} get-tuple-element((u32[2,2]{1,0}) %call.297), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_split ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %slice.299 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.298), slice={[0:1], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(1, 2)\n                        start_indices=(0, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.300 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.299), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.307 = s32[] constant(-2), metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False, False, False)\n                           name=_truncated_normal ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.308 = s32[] constant(2), metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False, False, False)\n                           name=_truncated_normal ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %call.788 = (f32[3,3,16,32]{3,2,1,0}) call(u32[4608]{0} %iota.3, u32[2]{0} %reshape.300, s32[] %constant.307, s32[] %constant.308), to_apply=%jit__truncated_normal.470, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False, False, False)\n                           name=_truncated_normal ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.789 = f32[3,3,16,32]{3,2,1,0} get-tuple-element((f32[3,3,16,32]{3,2,1,0}) %call.788), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False, False, False)\n                           name=_truncated_normal ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.303 = f32[] constant(0.00462962966), metadata={op_type="sqrt" op_name="jit(test_conv2d)/sqrt" source_file="jax/jax_test_conv2d.py" source_line=24}
  %sqrt.304 = f32[] sqrt(f32[] %constant.303), metadata={op_type="sqrt" op_name="jit(test_conv2d)/sqrt" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.305 = f32[] constant(0.879625678), metadata={op_type="div" op_name="jit(test_conv2d)/div" source_file="jax/jax_test_conv2d.py" source_line=24}
  %divide.306 = f32[] divide(f32[] %sqrt.304, f32[] %constant.305), metadata={op_type="div" op_name="jit(test_conv2d)/div" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.790 = f32[3,3,16,32]{3,2,1,0} broadcast(f32[] %divide.306), dimensions={}, metadata={op_type="mul" op_name="jit(test_conv2d)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.791 = f32[3,3,16,32]{3,2,1,0} multiply(f32[3,3,16,32]{3,2,1,0} %get-tuple-element.789, f32[3,3,16,32]{3,2,1,0} %broadcast.790), metadata={op_type="mul" op_name="jit(test_conv2d)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %convolution.1343 = f32[32,64,64,32]{3,2,1,0} convolution(f32[32,64,64,16]{3,2,1,0} %broadcast.1342, f32[3,3,16,32]{3,2,1,0} %multiply.791), window={size=3x3 pad=1_1x1_1}, dim_labels=b01f_01io->b01f, metadata={op_type="conv_general_dilated" op_name="jit(test_conv2d)/conv_general_dilated[ batch_group_count=1\n                                       dimension_numbers=ConvDimensionNumbers(lhs_spec=(0, 3, 1, 2), rhs_spec=(3, 2, 0, 1), out_spec=(0, 3, 1, 2))\n                                       feature_group_count=1\n                                       lhs_dilation=(1, 1)\n                                       lhs_shape=(32, 64, 64, 16)\n                                       padding=((1, 1), (1, 1))\n                                       precision=None\n                                       rhs_dilation=(1, 1)\n                                       rhs_shape=(3, 3, 16, 32)\n                                       window_strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=28}
  %iota.4 = u32[32]{0} iota(), iota_dimension=0
  %slice.301 = u32[1,2]{1,0} slice(u32[2,2]{1,0} %get-tuple-element.298), slice={[1:2], [0:2]}, metadata={op_type="slice" op_name="jit(test_conv2d)/slice[ limit_indices=(2, 2)\n                        start_indices=(1, 0)\n                        strides=(1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.302 = u32[2]{0} reshape(u32[1,2]{1,0} %slice.301), metadata={op_type="squeeze" op_name="jit(test_conv2d)/squeeze[ dimensions=(0,) ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %call.1050 = (f32[1,1,1,32]{3,2,1,0}) call(u32[32]{0} %iota.4, u32[2]{0} %reshape.302), to_apply=%jit__normal.953, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_normal ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %get-tuple-element.1051 = f32[1,1,1,32]{3,2,1,0} get-tuple-element((f32[1,1,1,32]{3,2,1,0}) %call.1050), index=0, metadata={op_type="xla_call" op_name="jit(test_conv2d)/xla_call[ backend=None\n                           device=None\n                           donated_invars=(False, False)\n                           name=_normal ]" source_file="jax/jax_test_conv2d.py" source_line=24}
  %constant.1052 = f32[] constant(1e-06), metadata={op_type="mul" op_name="jit(test_conv2d)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %broadcast.1053 = f32[1,1,1,32]{3,2,1,0} broadcast(f32[] %constant.1052), dimensions={}, metadata={op_type="mul" op_name="jit(test_conv2d)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %multiply.1054 = f32[1,1,1,32]{3,2,1,0} multiply(f32[1,1,1,32]{3,2,1,0} %get-tuple-element.1051, f32[1,1,1,32]{3,2,1,0} %broadcast.1053), metadata={op_type="mul" op_name="jit(test_conv2d)/mul" source_file="jax/jax_test_conv2d.py" source_line=24}
  %reshape.1344 = f32[32]{0} reshape(f32[1,1,1,32]{3,2,1,0} %multiply.1054), metadata={op_type="add" op_name="jit(test_conv2d)/add" source_file="jax/jax_test_conv2d.py" source_line=28}
  %broadcast.1345 = f32[32,64,64,32]{3,2,1,0} broadcast(f32[32]{0} %reshape.1344), dimensions={3}, metadata={op_type="add" op_name="jit(test_conv2d)/add" source_file="jax/jax_test_conv2d.py" source_line=28}
  %add.1346 = f32[32,64,64,32]{3,2,1,0} add(f32[32,64,64,32]{3,2,1,0} %convolution.1343, f32[32,64,64,32]{3,2,1,0} %broadcast.1345), metadata={op_type="add" op_name="jit(test_conv2d)/add" source_file="jax/jax_test_conv2d.py" source_line=28}
  %constant.1347 = f32[] constant(0), metadata={op_type="max" op_name="jit(test_conv2d)/max" source_file="jax/jax_test_conv2d.py" source_line=28}
  %broadcast.1348 = f32[32,64,64,32]{3,2,1,0} broadcast(f32[] %constant.1347), dimensions={}, metadata={op_type="max" op_name="jit(test_conv2d)/max" source_file="jax/jax_test_conv2d.py" source_line=28}
  %maximum.1349 = f32[32,64,64,32]{3,2,1,0} maximum(f32[32,64,64,32]{3,2,1,0} %add.1346, f32[32,64,64,32]{3,2,1,0} %broadcast.1348), metadata={op_type="max" op_name="jit(test_conv2d)/max" source_file="jax/jax_test_conv2d.py" source_line=28}
  %constant.1350 = f32[] constant(-inf), metadata={op_type="reduce_window_max" op_name="jit(test_conv2d)/reduce_window_max[ base_dilation=(1, 1, 1, 1)\n                                    padding=((0, 0), (0, 0), (0, 0), (0, 0))\n                                    window_dilation=(1, 1, 1, 1)\n                                    window_dimensions=(1, 2, 2, 1)\n                                    window_strides=(1, 1, 1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=28}
  %reduce-window.1355 = f32[32,63,63,32]{3,2,1,0} reduce-window(f32[32,64,64,32]{3,2,1,0} %maximum.1349, f32[] %constant.1350), window={size=1x2x2x1}, to_apply=%primitive_computation_max.1351, metadata={op_type="reduce_window_max" op_name="jit(test_conv2d)/reduce_window_max[ base_dilation=(1, 1, 1, 1)\n                                    padding=((0, 0), (0, 0), (0, 0), (0, 0))\n                                    window_dilation=(1, 1, 1, 1)\n                                    window_dimensions=(1, 2, 2, 1)\n                                    window_strides=(1, 1, 1, 1) ]" source_file="jax/jax_test_conv2d.py" source_line=28}
  ROOT %tuple.1356 = (f32[32,63,63,32]{3,2,1,0}) tuple(f32[32,63,63,32]{3,2,1,0} %reduce-window.1355)
}

